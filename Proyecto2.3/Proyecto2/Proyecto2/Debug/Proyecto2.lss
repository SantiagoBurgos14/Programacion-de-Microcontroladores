
Proyecto2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00001520  000015b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001520  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  0080011a  0080011a  000015ce  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000162c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00001670  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001114  00000000  00000000  00001770  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a3  00000000  00000000  00002884  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000099e  00000000  00000000  00003227  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  00003bc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000637  00000000  00000000  00003e8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008bb  00000000  00000000  000044c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00004d7e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e2       	ldi	r30, 0x20	; 32
      7c:	f5 e1       	ldi	r31, 0x15	; 21
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 31       	cpi	r26, 0x1A	; 26
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	aa e1       	ldi	r26, 0x1A	; 26
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a6 34       	cpi	r26, 0x46	; 70
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 4a 02 	call	0x494	; 0x494 <main>
      9e:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <PWM0_init>:
#include "MOTORES.h"

void PWM0_init(void)
{
	// Modo Fast PWM
	TCCR0B &= ~(1<<WGM02);
      a6:	85 b5       	in	r24, 0x25	; 37
      a8:	87 7f       	andi	r24, 0xF7	; 247
      aa:	85 bd       	out	0x25, r24	; 37
	TCCR0A |= (1<<WGM01);
      ac:	84 b5       	in	r24, 0x24	; 36
      ae:	82 60       	ori	r24, 0x02	; 2
      b0:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= (1<<WGM00);
      b2:	84 b5       	in	r24, 0x24	; 36
      b4:	81 60       	ori	r24, 0x01	; 1
      b6:	84 bd       	out	0x24, r24	; 36
	
	// Prescalador 64
	TCCR0B &= ~(1<<CS02);
      b8:	85 b5       	in	r24, 0x25	; 37
      ba:	8b 7f       	andi	r24, 0xFB	; 251
      bc:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= (1<<CS01);
      be:	85 b5       	in	r24, 0x25	; 37
      c0:	82 60       	ori	r24, 0x02	; 2
      c2:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= (1<<CS00);
      c4:	85 b5       	in	r24, 0x25	; 37
      c6:	81 60       	ori	r24, 0x01	; 1
      c8:	85 bd       	out	0x25, r24	; 37
      ca:	08 95       	ret

000000cc <PWM0_dca>:
}

void PWM0_dca(uint8_t dc, uint8_t modo)
{
	if(modo == 1)
      cc:	61 30       	cpi	r22, 0x01	; 1
      ce:	39 f4       	brne	.+14     	; 0xde <PWM0_dca+0x12>
	{
		TCCR0A |= (1<<COM0A1);
      d0:	94 b5       	in	r25, 0x24	; 36
      d2:	90 68       	ori	r25, 0x80	; 128
      d4:	94 bd       	out	0x24, r25	; 36
		TCCR0A &= ~(1<<COM0A0);
      d6:	94 b5       	in	r25, 0x24	; 36
      d8:	9f 7b       	andi	r25, 0xBF	; 191
      da:	94 bd       	out	0x24, r25	; 36
      dc:	06 c0       	rjmp	.+12     	; 0xea <PWM0_dca+0x1e>
	}
	else
	{
		TCCR0A |= (1<<COM0A1);
      de:	94 b5       	in	r25, 0x24	; 36
      e0:	90 68       	ori	r25, 0x80	; 128
      e2:	94 bd       	out	0x24, r25	; 36
		TCCR0A |= (1<<COM0A0);
      e4:	94 b5       	in	r25, 0x24	; 36
      e6:	90 64       	ori	r25, 0x40	; 64
      e8:	94 bd       	out	0x24, r25	; 36
		
	}
	OCR0A = (dc * 255) / 100;
      ea:	2f ef       	ldi	r18, 0xFF	; 255
      ec:	82 9f       	mul	r24, r18
      ee:	c0 01       	movw	r24, r0
      f0:	11 24       	eor	r1, r1
      f2:	64 e6       	ldi	r22, 0x64	; 100
      f4:	70 e0       	ldi	r23, 0x00	; 0
      f6:	0e 94 66 07 	call	0xecc	; 0xecc <__divmodhi4>
      fa:	67 bd       	out	0x27, r22	; 39
      fc:	08 95       	ret

000000fe <PWM0_dcb>:
}

void PWM0_dcb(uint8_t dc, uint8_t modo)
{
	if(modo == 1)
      fe:	61 30       	cpi	r22, 0x01	; 1
     100:	39 f4       	brne	.+14     	; 0x110 <PWM0_dcb+0x12>
	{
		TCCR0A |= (1<<COM0B1);
     102:	94 b5       	in	r25, 0x24	; 36
     104:	90 62       	ori	r25, 0x20	; 32
     106:	94 bd       	out	0x24, r25	; 36
		TCCR0A &= ~(1<<COM0B0);
     108:	94 b5       	in	r25, 0x24	; 36
     10a:	9f 7e       	andi	r25, 0xEF	; 239
     10c:	94 bd       	out	0x24, r25	; 36
     10e:	06 c0       	rjmp	.+12     	; 0x11c <PWM0_dcb+0x1e>
	}
	else
	{
		TCCR0A |= (1<<COM0B1);
     110:	94 b5       	in	r25, 0x24	; 36
     112:	90 62       	ori	r25, 0x20	; 32
     114:	94 bd       	out	0x24, r25	; 36
		TCCR0A |= (1<<COM0B0);
     116:	94 b5       	in	r25, 0x24	; 36
     118:	90 61       	ori	r25, 0x10	; 16
     11a:	94 bd       	out	0x24, r25	; 36
		
	}
	OCR0B = (dc * 255) / 100;
     11c:	2f ef       	ldi	r18, 0xFF	; 255
     11e:	82 9f       	mul	r24, r18
     120:	c0 01       	movw	r24, r0
     122:	11 24       	eor	r1, r1
     124:	64 e6       	ldi	r22, 0x64	; 100
     126:	70 e0       	ldi	r23, 0x00	; 0
     128:	0e 94 66 07 	call	0xecc	; 0xecc <__divmodhi4>
     12c:	68 bd       	out	0x28, r22	; 40
     12e:	08 95       	ret

00000130 <ADC_init>:
}


void writeUART(char caracter){
	while(!(UCSR0A&(1<<UDRE0)));
	UDR0 = caracter;
     130:	ec e7       	ldi	r30, 0x7C	; 124
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	80 81       	ld	r24, Z
     136:	80 64       	ori	r24, 0x40	; 64
     138:	80 83       	st	Z, r24
     13a:	80 81       	ld	r24, Z
     13c:	8f 77       	andi	r24, 0x7F	; 127
     13e:	80 83       	st	Z, r24
     140:	80 81       	ld	r24, Z
     142:	8f 7d       	andi	r24, 0xDF	; 223
     144:	80 83       	st	Z, r24
     146:	ea e7       	ldi	r30, 0x7A	; 122
     148:	f0 e0       	ldi	r31, 0x00	; 0
     14a:	80 81       	ld	r24, Z
     14c:	87 60       	ori	r24, 0x07	; 7
     14e:	80 83       	st	Z, r24
     150:	80 81       	ld	r24, Z
     152:	80 68       	ori	r24, 0x80	; 128
     154:	80 83       	st	Z, r24
     156:	87 b1       	in	r24, 0x07	; 7
     158:	8f 7e       	andi	r24, 0xEF	; 239
     15a:	87 b9       	out	0x07, r24	; 7
     15c:	88 b1       	in	r24, 0x08	; 8
     15e:	80 63       	ori	r24, 0x30	; 48
     160:	88 b9       	out	0x08, r24	; 8
     162:	87 b1       	in	r24, 0x07	; 7
     164:	8f 7d       	andi	r24, 0xDF	; 223
     166:	87 b9       	out	0x07, r24	; 7
     168:	e8 e6       	ldi	r30, 0x68	; 104
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	82 60       	ori	r24, 0x02	; 2
     170:	80 83       	st	Z, r24
     172:	ec e6       	ldi	r30, 0x6C	; 108
     174:	f0 e0       	ldi	r31, 0x00	; 0
     176:	80 81       	ld	r24, Z
     178:	80 63       	ori	r24, 0x30	; 48
     17a:	80 83       	st	Z, r24
     17c:	08 95       	ret

0000017e <adcRead>:
     17e:	ec e7       	ldi	r30, 0x7C	; 124
     180:	f0 e0       	ldi	r31, 0x00	; 0
     182:	90 81       	ld	r25, Z
     184:	90 7f       	andi	r25, 0xF0	; 240
     186:	89 2b       	or	r24, r25
     188:	80 83       	st	Z, r24
     18a:	ea e7       	ldi	r30, 0x7A	; 122
     18c:	f0 e0       	ldi	r31, 0x00	; 0
     18e:	80 81       	ld	r24, Z
     190:	80 64       	ori	r24, 0x40	; 64
     192:	80 83       	st	Z, r24
     194:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     198:	86 fd       	sbrc	r24, 6
     19a:	fc cf       	rjmp	.-8      	; 0x194 <adcRead+0x16>
     19c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     1a0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     1a4:	08 95       	ret

000001a6 <__vector_4>:
     1a6:	1f 92       	push	r1
     1a8:	0f 92       	push	r0
     1aa:	0f b6       	in	r0, 0x3f	; 63
     1ac:	0f 92       	push	r0
     1ae:	11 24       	eor	r1, r1
     1b0:	8f 93       	push	r24
     1b2:	9f 93       	push	r25
     1b4:	8f e3       	ldi	r24, 0x3F	; 63
     1b6:	9c e9       	ldi	r25, 0x9C	; 156
     1b8:	01 97       	sbiw	r24, 0x01	; 1
     1ba:	f1 f7       	brne	.-4      	; 0x1b8 <__vector_4+0x12>
     1bc:	00 c0       	rjmp	.+0      	; 0x1be <__vector_4+0x18>
     1be:	00 00       	nop
     1c0:	34 99       	sbic	0x06, 4	; 6
     1c2:	0b c0       	rjmp	.+22     	; 0x1da <__vector_4+0x34>
     1c4:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Estado>
     1c8:	8f 5f       	subi	r24, 0xFF	; 255
     1ca:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <Estado>
     1ce:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Estado>
     1d2:	84 30       	cpi	r24, 0x04	; 4
     1d4:	10 f0       	brcs	.+4      	; 0x1da <__vector_4+0x34>
     1d6:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <Estado>
     1da:	35 99       	sbic	0x06, 5	; 6
     1dc:	2b c0       	rjmp	.+86     	; 0x234 <__vector_4+0x8e>
     1de:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Estado>
     1e2:	81 30       	cpi	r24, 0x01	; 1
     1e4:	91 f4       	brne	.+36     	; 0x20a <__vector_4+0x64>
     1e6:	35 9b       	sbis	0x06, 5	; 6
     1e8:	25 c0       	rjmp	.+74     	; 0x234 <__vector_4+0x8e>
     1ea:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     1ee:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     1f2:	0a 96       	adiw	r24, 0x0a	; 10
     1f4:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
     1f8:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <EstadoGuardarEEPROM+0x1>
     204:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <EstadoGuardarEEPROM>
     208:	15 c0       	rjmp	.+42     	; 0x234 <__vector_4+0x8e>
     20a:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Estado>
     20e:	82 30       	cpi	r24, 0x02	; 2
     210:	89 f4       	brne	.+34     	; 0x234 <__vector_4+0x8e>
     212:	35 9b       	sbis	0x06, 5	; 6
     214:	09 c0       	rjmp	.+18     	; 0x228 <__vector_4+0x82>
     216:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     21a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     21e:	0a 96       	adiw	r24, 0x0a	; 10
     220:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
     224:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <EstadoLeerEEPROM+0x1>
     230:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <EstadoLeerEEPROM>
     234:	9f 91       	pop	r25
     236:	8f 91       	pop	r24
     238:	0f 90       	pop	r0
     23a:	0f be       	out	0x3f, r0	; 63
     23c:	0f 90       	pop	r0
     23e:	1f 90       	pop	r1
     240:	18 95       	reti

00000242 <initUART>:
     242:	8a b1       	in	r24, 0x0a	; 10
     244:	8e 7f       	andi	r24, 0xFE	; 254
     246:	8a b9       	out	0x0a, r24	; 10
     248:	8a b1       	in	r24, 0x0a	; 10
     24a:	82 60       	ori	r24, 0x02	; 2
     24c:	8a b9       	out	0x0a, r24	; 10
     24e:	e0 ec       	ldi	r30, 0xC0	; 192
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	10 82       	st	Z, r1
     254:	80 81       	ld	r24, Z
     256:	82 60       	ori	r24, 0x02	; 2
     258:	80 83       	st	Z, r24
     25a:	e1 ec       	ldi	r30, 0xC1	; 193
     25c:	f0 e0       	ldi	r31, 0x00	; 0
     25e:	10 82       	st	Z, r1
     260:	80 81       	ld	r24, Z
     262:	88 69       	ori	r24, 0x98	; 152
     264:	80 83       	st	Z, r24
     266:	e2 ec       	ldi	r30, 0xC2	; 194
     268:	f0 e0       	ldi	r31, 0x00	; 0
     26a:	10 82       	st	Z, r1
     26c:	80 81       	ld	r24, Z
     26e:	86 60       	ori	r24, 0x06	; 6
     270:	80 83       	st	Z, r24
     272:	8f ec       	ldi	r24, 0xCF	; 207
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     27a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     27e:	08 95       	ret

00000280 <writeTextUART>:
}

void writeTextUART(char* texto){
     280:	ac 01       	movw	r20, r24
	uint8_t i;
	for (i=0; texto[i] != '\0'; i++){
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	07 c0       	rjmp	.+14     	; 0x294 <writeTextUART+0x14>
		while(!(UCSR0A&(1<<UDRE0)));
     286:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     28a:	95 ff       	sbrs	r25, 5
     28c:	fc cf       	rjmp	.-8      	; 0x286 <writeTextUART+0x6>
		UDR0 = texto[i];
     28e:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	UDR0 = caracter;
}

void writeTextUART(char* texto){
	uint8_t i;
	for (i=0; texto[i] != '\0'; i++){
     292:	2f 5f       	subi	r18, 0xFF	; 255
     294:	fa 01       	movw	r30, r20
     296:	e2 0f       	add	r30, r18
     298:	f1 1d       	adc	r31, r1
     29a:	30 81       	ld	r19, Z
     29c:	31 11       	cpse	r19, r1
     29e:	f3 cf       	rjmp	.-26     	; 0x286 <writeTextUART+0x6>
		while(!(UCSR0A&(1<<UDRE0)));
		UDR0 = texto[i];
	}
}
     2a0:	08 95       	ret

000002a2 <pruebaServos>:


void pruebaServos(void){
     2a2:	af 92       	push	r10
     2a4:	bf 92       	push	r11
     2a6:	cf 92       	push	r12
     2a8:	df 92       	push	r13
     2aa:	ef 92       	push	r14
     2ac:	ff 92       	push	r15
     2ae:	0f 93       	push	r16
     2b0:	1f 93       	push	r17
     2b2:	cf 93       	push	r28
		// Servomotores
		
		adcValue1 = adcRead(0);
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	0e 94 bf 00 	call	0x17e	; 0x17e <adcRead>
     2ba:	bc 01       	movw	r22, r24
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	0e 94 42 06 	call	0xc84	; 0xc84 <__floatunsisf>
     2c4:	60 93 37 01 	sts	0x0137, r22	; 0x800137 <adcValue1>
     2c8:	70 93 38 01 	sts	0x0138, r23	; 0x800138 <adcValue1+0x1>
     2cc:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <adcValue1+0x2>
     2d0:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <adcValue1+0x3>
		servo_writeA(adcValue1);
     2d4:	0e 94 c4 04 	call	0x988	; 0x988 <servo_writeA>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2d8:	8f e3       	ldi	r24, 0x3F	; 63
     2da:	9c e9       	ldi	r25, 0x9C	; 156
     2dc:	01 97       	sbiw	r24, 0x01	; 1
     2de:	f1 f7       	brne	.-4      	; 0x2dc <pruebaServos+0x3a>
     2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <pruebaServos+0x40>
     2e2:	00 00       	nop
		_delay_ms(10);
		adcValue2 = adcRead(1);
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	0e 94 bf 00 	call	0x17e	; 0x17e <adcRead>
     2ea:	bc 01       	movw	r22, r24
     2ec:	80 e0       	ldi	r24, 0x00	; 0
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	0e 94 42 06 	call	0xc84	; 0xc84 <__floatunsisf>
     2f4:	60 93 33 01 	sts	0x0133, r22	; 0x800133 <adcValue2>
     2f8:	70 93 34 01 	sts	0x0134, r23	; 0x800134 <adcValue2+0x1>
     2fc:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <adcValue2+0x2>
     300:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <adcValue2+0x3>
		servo_writeB(adcValue2);
     304:	0e 94 f6 04 	call	0x9ec	; 0x9ec <servo_writeB>
     308:	8f e3       	ldi	r24, 0x3F	; 63
     30a:	9c e9       	ldi	r25, 0x9C	; 156
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	f1 f7       	brne	.-4      	; 0x30c <pruebaServos+0x6a>
     310:	00 c0       	rjmp	.+0      	; 0x312 <pruebaServos+0x70>
     312:	00 00       	nop
		_delay_ms(10);
		
		// Motores DC			
				
		adcValue3 = adcRead(2);
     314:	82 e0       	ldi	r24, 0x02	; 2
     316:	0e 94 bf 00 	call	0x17e	; 0x17e <adcRead>
     31a:	bc 01       	movw	r22, r24
     31c:	80 e0       	ldi	r24, 0x00	; 0
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	0e 94 42 06 	call	0xc84	; 0xc84 <__floatunsisf>
     324:	60 93 2f 01 	sts	0x012F, r22	; 0x80012f <adcValue3>
     328:	70 93 30 01 	sts	0x0130, r23	; 0x800130 <adcValue3+0x1>
     32c:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <adcValue3+0x2>
     330:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <adcValue3+0x3>
		adcValue4 = adcRead(3);
     334:	83 e0       	ldi	r24, 0x03	; 3
     336:	0e 94 bf 00 	call	0x17e	; 0x17e <adcRead>
     33a:	bc 01       	movw	r22, r24
     33c:	80 e0       	ldi	r24, 0x00	; 0
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	0e 94 42 06 	call	0xc84	; 0xc84 <__floatunsisf>
     344:	60 93 2b 01 	sts	0x012B, r22	; 0x80012b <adcValue4>
     348:	70 93 2c 01 	sts	0x012C, r23	; 0x80012c <adcValue4+0x1>
     34c:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <adcValue4+0x2>
     350:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <adcValue4+0x3>
		dutyCycle = map(adcValue3, 512, 1023, 0, 75);
     354:	60 91 2f 01 	lds	r22, 0x012F	; 0x80012f <adcValue3>
     358:	70 91 30 01 	lds	r23, 0x0130	; 0x800130 <adcValue3+0x1>
     35c:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <adcValue3+0x2>
     360:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <adcValue3+0x3>
     364:	c2 e4       	ldi	r28, 0x42	; 66
     366:	cf 93       	push	r28
     368:	26 e9       	ldi	r18, 0x96	; 150
     36a:	2f 93       	push	r18
     36c:	1f 92       	push	r1
     36e:	1f 92       	push	r1
     370:	a1 2c       	mov	r10, r1
     372:	b1 2c       	mov	r11, r1
     374:	65 01       	movw	r12, r10
     376:	e1 2c       	mov	r14, r1
     378:	10 ec       	ldi	r17, 0xC0	; 192
     37a:	f1 2e       	mov	r15, r17
     37c:	0f e7       	ldi	r16, 0x7F	; 127
     37e:	14 e4       	ldi	r17, 0x44	; 68
     380:	20 e0       	ldi	r18, 0x00	; 0
     382:	30 e0       	ldi	r19, 0x00	; 0
     384:	40 e0       	ldi	r20, 0x00	; 0
     386:	54 e4       	ldi	r21, 0x44	; 68
     388:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     38c:	60 93 27 01 	sts	0x0127, r22	; 0x800127 <dutyCycle>
     390:	70 93 28 01 	sts	0x0128, r23	; 0x800128 <dutyCycle+0x1>
     394:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <dutyCycle+0x2>
     398:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <dutyCycle+0x3>
		dutyCycle2 = map(adcValue4, 500, 1023, 0, 50);
     39c:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <adcValue4>
     3a0:	70 91 2c 01 	lds	r23, 0x012C	; 0x80012c <adcValue4+0x1>
     3a4:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <adcValue4+0x2>
     3a8:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <adcValue4+0x3>
     3ac:	cf 93       	push	r28
     3ae:	28 e4       	ldi	r18, 0x48	; 72
     3b0:	2f 93       	push	r18
     3b2:	1f 92       	push	r1
     3b4:	1f 92       	push	r1
     3b6:	20 e0       	ldi	r18, 0x00	; 0
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	4a ef       	ldi	r20, 0xFA	; 250
     3bc:	53 e4       	ldi	r21, 0x43	; 67
     3be:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     3c2:	60 93 23 01 	sts	0x0123, r22	; 0x800123 <dutyCycle2>
     3c6:	70 93 24 01 	sts	0x0124, r23	; 0x800124 <dutyCycle2+0x1>
     3ca:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <dutyCycle2+0x2>
     3ce:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <dutyCycle2+0x3>
		if (adcValue3 >= 520)
     3d2:	60 91 2f 01 	lds	r22, 0x012F	; 0x80012f <adcValue3>
     3d6:	70 91 30 01 	lds	r23, 0x0130	; 0x800130 <adcValue3+0x1>
     3da:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <adcValue3+0x2>
     3de:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <adcValue3+0x3>
     3e2:	2d b7       	in	r18, 0x3d	; 61
     3e4:	3e b7       	in	r19, 0x3e	; 62
     3e6:	28 5f       	subi	r18, 0xF8	; 248
     3e8:	3f 4f       	sbci	r19, 0xFF	; 255
     3ea:	0f b6       	in	r0, 0x3f	; 63
     3ec:	f8 94       	cli
     3ee:	3e bf       	out	0x3e, r19	; 62
     3f0:	0f be       	out	0x3f, r0	; 63
     3f2:	2d bf       	out	0x3d, r18	; 61
     3f4:	20 e0       	ldi	r18, 0x00	; 0
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	42 e0       	ldi	r20, 0x02	; 2
     3fa:	54 e4       	ldi	r21, 0x44	; 68
     3fc:	0e 94 f4 06 	call	0xde8	; 0xde8 <__gesf2>
     400:	88 23       	and	r24, r24
     402:	9c f0       	brlt	.+38     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
		{
			
			PWM0_dca(dutyCycle, NO_INVERTING);
     404:	60 91 27 01 	lds	r22, 0x0127	; 0x800127 <dutyCycle>
     408:	70 91 28 01 	lds	r23, 0x0128	; 0x800128 <dutyCycle+0x1>
     40c:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <dutyCycle+0x2>
     410:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <dutyCycle+0x3>
     414:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     418:	86 2f       	mov	r24, r22
     41a:	61 e0       	ldi	r22, 0x01	; 1
     41c:	0e 94 66 00 	call	0xcc	; 0xcc <PWM0_dca>
			//PORTD |= (1 << PD3);
			//PORTD &= ~( 1<< PD2);
			
			PWM0_dcb(0, NO_INVERTING);
     420:	61 e0       	ldi	r22, 0x01	; 1
     422:	80 e0       	ldi	r24, 0x00	; 0
     424:	0e 94 7f 00 	call	0xfe	; 0xfe <PWM0_dcb>
     428:	2b c0       	rjmp	.+86     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
			//PORTD |= (1 << PD4);
			//PORTD &= ~( 1<< PD7);
			
			}
			else if (adcValue4 <= 500)
     42a:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <adcValue4>
     42e:	70 91 2c 01 	lds	r23, 0x012C	; 0x80012c <adcValue4+0x1>
     432:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <adcValue4+0x2>
     436:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <adcValue4+0x3>
     43a:	20 e0       	ldi	r18, 0x00	; 0
     43c:	30 e0       	ldi	r19, 0x00	; 0
     43e:	4a ef       	ldi	r20, 0xFA	; 250
     440:	53 e4       	ldi	r21, 0x43	; 67
     442:	0e 94 95 05 	call	0xb2a	; 0xb2a <__cmpsf2>
     446:	18 16       	cp	r1, r24
     448:	9c f0       	brlt	.+38     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
				//PORTD &= ~(1 << PD3);
				//PORTD |= (1 << PD7);
				//PORTD &= ~(1 << PD4);
				
				
				PWM0_dca(0, NO_INVERTING);
     44a:	61 e0       	ldi	r22, 0x01	; 1
     44c:	80 e0       	ldi	r24, 0x00	; 0
     44e:	0e 94 66 00 	call	0xcc	; 0xcc <PWM0_dca>
				PWM0_dcb(dutyCycle2, NO_INVERTING);
     452:	60 91 23 01 	lds	r22, 0x0123	; 0x800123 <dutyCycle2>
     456:	70 91 24 01 	lds	r23, 0x0124	; 0x800124 <dutyCycle2+0x1>
     45a:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <dutyCycle2+0x2>
     45e:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <dutyCycle2+0x3>
     462:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     466:	86 2f       	mov	r24, r22
     468:	61 e0       	ldi	r22, 0x01	; 1
     46a:	0e 94 7f 00 	call	0xfe	; 0xfe <PWM0_dcb>
     46e:	08 c0       	rjmp	.+16     	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
				
			}
			
			else {
			PWM0_dca(0, NO_INVERTING);
     470:	61 e0       	ldi	r22, 0x01	; 1
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	0e 94 66 00 	call	0xcc	; 0xcc <PWM0_dca>
			PWM0_dcb(0, NO_INVERTING);
     478:	61 e0       	ldi	r22, 0x01	; 1
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	0e 94 7f 00 	call	0xfe	; 0xfe <PWM0_dcb>
		
		
			
		
	
}
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	ff 90       	pop	r15
     488:	ef 90       	pop	r14
     48a:	df 90       	pop	r13
     48c:	cf 90       	pop	r12
     48e:	bf 90       	pop	r11
     490:	af 90       	pop	r10
     492:	08 95       	ret

00000494 <main>:
// MAIN
////////////////////////////////////////////////////////////////////////////

int main (void){
	
	cli();
     494:	f8 94       	cli
	
	DDRD = 0xFF;	// Salidas
     496:	8f ef       	ldi	r24, 0xFF	; 255
     498:	8a b9       	out	0x0a, r24	; 10
	
	PWM_init();
     49a:	0e 94 49 04 	call	0x892	; 0x892 <PWM_init>
	PWM0_init();
     49e:	0e 94 53 00 	call	0xa6	; 0xa6 <PWM0_init>
	ADC_init();
     4a2:	0e 94 98 00 	call	0x130	; 0x130 <ADC_init>
	
	initUART();
     4a6:	0e 94 21 01 	call	0x242	; 0x242 <initUART>
	
	
	
	sei();
     4aa:	78 94       	sei
	
	
	
	while (1){
		
		switch (Estado)
     4ac:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <Estado>
     4b0:	81 30       	cpi	r24, 0x01	; 1
     4b2:	a1 f0       	breq	.+40     	; 0x4dc <main+0x48>
     4b4:	38 f0       	brcs	.+14     	; 0x4c4 <main+0x30>
     4b6:	82 30       	cpi	r24, 0x02	; 2
     4b8:	09 f4       	brne	.+2      	; 0x4bc <main+0x28>
     4ba:	da c0       	rjmp	.+436    	; 0x670 <main+0x1dc>
     4bc:	83 30       	cpi	r24, 0x03	; 3
     4be:	09 f4       	brne	.+2      	; 0x4c2 <main+0x2e>
     4c0:	de c1       	rjmp	.+956    	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
     4c2:	f4 cf       	rjmp	.-24     	; 0x4ac <main+0x18>
		{
// caso manual ///////////////////////////////////
		case 0:	// Estado Manual
		
		PORTB |= (1 << LEDVERDE);
     4c4:	85 b1       	in	r24, 0x05	; 5
     4c6:	80 61       	ori	r24, 0x10	; 16
     4c8:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1<< LEDAZUL);
     4ca:	85 b1       	in	r24, 0x05	; 5
     4cc:	87 7f       	andi	r24, 0xF7	; 247
     4ce:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1<< LEDROJO);
     4d0:	85 b1       	in	r24, 0x05	; 5
     4d2:	8f 7d       	andi	r24, 0xDF	; 223
     4d4:	85 b9       	out	0x05, r24	; 5
		
		pruebaServos();
     4d6:	0e 94 51 01 	call	0x2a2	; 0x2a2 <pruebaServos>

				
			break;
     4da:	e8 cf       	rjmp	.-48     	; 0x4ac <main+0x18>
			
// Estado para guardar movimientos	/////////////////////////////////////////

		case 1: 
				
		PORTB |= (1 << LEDROJO) | (1 << LEDAZUL);
     4dc:	85 b1       	in	r24, 0x05	; 5
     4de:	88 62       	ori	r24, 0x28	; 40
     4e0:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1 << LEDVERDE);
     4e2:	85 b1       	in	r24, 0x05	; 5
     4e4:	8f 7e       	andi	r24, 0xEF	; 239
     4e6:	85 b9       	out	0x05, r24	; 5
		
		pruebaServos();
     4e8:	0e 94 51 01 	call	0x2a2	; 0x2a2 <pruebaServos>
		
		
		if (EstadoGuardarEEPROM == 1)			// Si estadoGuardarEEPROM = 1 permite guardad, si =0 no guarda
     4ec:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <EstadoGuardarEEPROM>
     4f0:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <EstadoGuardarEEPROM+0x1>
     4f4:	01 97       	sbiw	r24, 0x01	; 1
     4f6:	d1 f6       	brne	.-76     	; 0x4ac <main+0x18>
		{
			
			adcValue1 = map(adcValue1, 0, 1023, 0, 255);
     4f8:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <adcValue1>
     4fc:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <adcValue1+0x1>
     500:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <adcValue1+0x2>
     504:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <adcValue1+0x3>
     508:	0f 2e       	mov	r0, r31
     50a:	f3 e4       	ldi	r31, 0x43	; 67
     50c:	8f 2e       	mov	r8, r31
     50e:	f0 2d       	mov	r31, r0
     510:	8f 92       	push	r8
     512:	0f 2e       	mov	r0, r31
     514:	ff e7       	ldi	r31, 0x7F	; 127
     516:	9f 2e       	mov	r9, r31
     518:	f0 2d       	mov	r31, r0
     51a:	9f 92       	push	r9
     51c:	1f 92       	push	r1
     51e:	1f 92       	push	r1
     520:	a1 2c       	mov	r10, r1
     522:	b1 2c       	mov	r11, r1
     524:	65 01       	movw	r12, r10
     526:	e1 2c       	mov	r14, r1
     528:	10 ec       	ldi	r17, 0xC0	; 192
     52a:	f1 2e       	mov	r15, r17
     52c:	0f e7       	ldi	r16, 0x7F	; 127
     52e:	14 e4       	ldi	r17, 0x44	; 68
     530:	a6 01       	movw	r20, r12
     532:	95 01       	movw	r18, r10
     534:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     538:	60 93 37 01 	sts	0x0137, r22	; 0x800137 <adcValue1>
     53c:	70 93 38 01 	sts	0x0138, r23	; 0x800138 <adcValue1+0x1>
     540:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <adcValue1+0x2>
     544:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <adcValue1+0x3>
			int EepromTemporal = 0 + contadorGuardar;
     548:	c0 91 1a 01 	lds	r28, 0x011A	; 0x80011a <__data_end>
     54c:	d0 91 1b 01 	lds	r29, 0x011B	; 0x80011b <__data_end+0x1>
			eeprom_write_byte((uint8_t*)EepromTemporal, adcValue1);
     550:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     554:	ce 01       	movw	r24, r28
     556:	0e 94 49 0a 	call	0x1492	; 0x1492 <eeprom_write_byte>
     55a:	8f e1       	ldi	r24, 0x1F	; 31
     55c:	9e e4       	ldi	r25, 0x4E	; 78
     55e:	01 97       	sbiw	r24, 0x01	; 1
     560:	f1 f7       	brne	.-4      	; 0x55e <main+0xca>
     562:	00 c0       	rjmp	.+0      	; 0x564 <main+0xd0>
     564:	00 00       	nop
			_delay_ms(5);
			
			EepromTemporal = 1 + contadorGuardar;
     566:	c0 91 1a 01 	lds	r28, 0x011A	; 0x80011a <__data_end>
     56a:	d0 91 1b 01 	lds	r29, 0x011B	; 0x80011b <__data_end+0x1>
     56e:	21 96       	adiw	r28, 0x01	; 1
			adcValue2 = map(adcValue2, 0, 1023, 0, 255);
     570:	60 91 33 01 	lds	r22, 0x0133	; 0x800133 <adcValue2>
     574:	70 91 34 01 	lds	r23, 0x0134	; 0x800134 <adcValue2+0x1>
     578:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <adcValue2+0x2>
     57c:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <adcValue2+0x3>
     580:	8f 92       	push	r8
     582:	9f 92       	push	r9
     584:	1f 92       	push	r1
     586:	1f 92       	push	r1
     588:	a6 01       	movw	r20, r12
     58a:	95 01       	movw	r18, r10
     58c:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     590:	60 93 33 01 	sts	0x0133, r22	; 0x800133 <adcValue2>
     594:	70 93 34 01 	sts	0x0134, r23	; 0x800134 <adcValue2+0x1>
     598:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <adcValue2+0x2>
     59c:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <adcValue2+0x3>
			eeprom_write_byte((uint8_t*)EepromTemporal, adcValue2);
     5a0:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     5a4:	ce 01       	movw	r24, r28
     5a6:	0e 94 49 0a 	call	0x1492	; 0x1492 <eeprom_write_byte>
     5aa:	8f e1       	ldi	r24, 0x1F	; 31
     5ac:	9e e4       	ldi	r25, 0x4E	; 78
     5ae:	01 97       	sbiw	r24, 0x01	; 1
     5b0:	f1 f7       	brne	.-4      	; 0x5ae <main+0x11a>
     5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <main+0x120>
     5b4:	00 00       	nop
			_delay_ms(5);			
			
			EepromTemporal = 2 + contadorGuardar;
     5b6:	c0 91 1a 01 	lds	r28, 0x011A	; 0x80011a <__data_end>
     5ba:	d0 91 1b 01 	lds	r29, 0x011B	; 0x80011b <__data_end+0x1>
     5be:	22 96       	adiw	r28, 0x02	; 2
			adcValue3 = map(adcValue3, 0 , 1023, 0, 75);
     5c0:	60 91 2f 01 	lds	r22, 0x012F	; 0x80012f <adcValue3>
     5c4:	70 91 30 01 	lds	r23, 0x0130	; 0x800130 <adcValue3+0x1>
     5c8:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <adcValue3+0x2>
     5cc:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <adcValue3+0x3>
     5d0:	0f 2e       	mov	r0, r31
     5d2:	f2 e4       	ldi	r31, 0x42	; 66
     5d4:	9f 2e       	mov	r9, r31
     5d6:	f0 2d       	mov	r31, r0
     5d8:	9f 92       	push	r9
     5da:	26 e9       	ldi	r18, 0x96	; 150
     5dc:	2f 93       	push	r18
     5de:	1f 92       	push	r1
     5e0:	1f 92       	push	r1
     5e2:	a6 01       	movw	r20, r12
     5e4:	95 01       	movw	r18, r10
     5e6:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     5ea:	60 93 2f 01 	sts	0x012F, r22	; 0x80012f <adcValue3>
     5ee:	70 93 30 01 	sts	0x0130, r23	; 0x800130 <adcValue3+0x1>
     5f2:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <adcValue3+0x2>
     5f6:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <adcValue3+0x3>
			eeprom_write_byte((uint8_t*)EepromTemporal, adcValue3);
     5fa:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     5fe:	ce 01       	movw	r24, r28
     600:	0e 94 49 0a 	call	0x1492	; 0x1492 <eeprom_write_byte>
     604:	8f e1       	ldi	r24, 0x1F	; 31
     606:	9e e4       	ldi	r25, 0x4E	; 78
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	f1 f7       	brne	.-4      	; 0x608 <main+0x174>
     60c:	00 c0       	rjmp	.+0      	; 0x60e <main+0x17a>
     60e:	00 00       	nop
			_delay_ms(5);
			
			EepromTemporal = 3 + contadorGuardar;
     610:	c0 91 1a 01 	lds	r28, 0x011A	; 0x80011a <__data_end>
     614:	d0 91 1b 01 	lds	r29, 0x011B	; 0x80011b <__data_end+0x1>
     618:	23 96       	adiw	r28, 0x03	; 3
			adcValue4 = map(adcValue4, 0, 1023, 0, 50);
     61a:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <adcValue4>
     61e:	70 91 2c 01 	lds	r23, 0x012C	; 0x80012c <adcValue4+0x1>
     622:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <adcValue4+0x2>
     626:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <adcValue4+0x3>
     62a:	9f 92       	push	r9
     62c:	28 e4       	ldi	r18, 0x48	; 72
     62e:	2f 93       	push	r18
     630:	1f 92       	push	r1
     632:	1f 92       	push	r1
     634:	a6 01       	movw	r20, r12
     636:	95 01       	movw	r18, r10
     638:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     63c:	60 93 2b 01 	sts	0x012B, r22	; 0x80012b <adcValue4>
     640:	70 93 2c 01 	sts	0x012C, r23	; 0x80012c <adcValue4+0x1>
     644:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <adcValue4+0x2>
     648:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <adcValue4+0x3>
			eeprom_write_byte((uint8_t*)EepromTemporal, adcValue4);
     64c:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     650:	ce 01       	movw	r24, r28
     652:	0e 94 49 0a 	call	0x1492	; 0x1492 <eeprom_write_byte>
						
			EstadoGuardarEEPROM = 0;
     656:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <EstadoGuardarEEPROM+0x1>
     65a:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <EstadoGuardarEEPROM>
     65e:	8d b7       	in	r24, 0x3d	; 61
     660:	9e b7       	in	r25, 0x3e	; 62
     662:	40 96       	adiw	r24, 0x10	; 16
     664:	0f b6       	in	r0, 0x3f	; 63
     666:	f8 94       	cli
     668:	9e bf       	out	0x3e, r25	; 62
     66a:	0f be       	out	0x3f, r0	; 63
     66c:	8d bf       	out	0x3d, r24	; 61
     66e:	1e cf       	rjmp	.-452    	; 0x4ac <main+0x18>
			break;
			
// Estado para leer los movimientos
		case 2:	
			
		PORTB |= (1 << LEDVERDE) | (1 << LEDAZUL);
     670:	85 b1       	in	r24, 0x05	; 5
     672:	88 61       	ori	r24, 0x18	; 24
     674:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1 << LEDROJO);
     676:	85 b1       	in	r24, 0x05	; 5
     678:	8f 7d       	andi	r24, 0xDF	; 223
     67a:	85 b9       	out	0x05, r24	; 5
		
		if (EstadoLeerEEPROM == 1){			// Si EsstadoLeerEEPROM = 1 activa los movimientos
     67c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <EstadoLeerEEPROM>
     680:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <EstadoLeerEEPROM+0x1>
     684:	01 97       	sbiw	r24, 0x01	; 1
     686:	09 f0       	breq	.+2      	; 0x68a <main+0x1f6>
     688:	ce c0       	rjmp	.+412    	; 0x826 <__DATA_REGION_LENGTH__+0x26>
			int lecturaEEPROMTemporal0 = 0 + contadorGuardar;
			LecturaEEPROM = eeprom_read_byte((uint8_t*)lecturaEEPROMTemporal0);
     68a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     68e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     692:	0e 94 41 0a 	call	0x1482	; 0x1482 <eeprom_read_byte>
     696:	68 2f       	mov	r22, r24
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <LecturaEEPROM+0x1>
     69e:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <LecturaEEPROM>
			LecturaEEPROM = map (LecturaEEPROM, 0, 255, 0, 1023);
     6a2:	07 2e       	mov	r0, r23
     6a4:	00 0c       	add	r0, r0
     6a6:	88 0b       	sbc	r24, r24
     6a8:	99 0b       	sbc	r25, r25
     6aa:	0e 94 44 06 	call	0xc88	; 0xc88 <__floatsisf>
     6ae:	0f 2e       	mov	r0, r31
     6b0:	f4 e4       	ldi	r31, 0x44	; 68
     6b2:	9f 2e       	mov	r9, r31
     6b4:	f0 2d       	mov	r31, r0
     6b6:	9f 92       	push	r9
     6b8:	df e7       	ldi	r29, 0x7F	; 127
     6ba:	df 93       	push	r29
     6bc:	c0 ec       	ldi	r28, 0xC0	; 192
     6be:	cf 93       	push	r28
     6c0:	1f 92       	push	r1
     6c2:	a1 2c       	mov	r10, r1
     6c4:	b1 2c       	mov	r11, r1
     6c6:	65 01       	movw	r12, r10
     6c8:	e1 2c       	mov	r14, r1
     6ca:	f1 2c       	mov	r15, r1
     6cc:	0f e7       	ldi	r16, 0x7F	; 127
     6ce:	13 e4       	ldi	r17, 0x43	; 67
     6d0:	a6 01       	movw	r20, r12
     6d2:	95 01       	movw	r18, r10
     6d4:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     6d8:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fixsfsi>
     6dc:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <LecturaEEPROM+0x1>
     6e0:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <LecturaEEPROM>
			servo_writeA(LecturaEEPROM);
     6e4:	07 2e       	mov	r0, r23
     6e6:	00 0c       	add	r0, r0
     6e8:	88 0b       	sbc	r24, r24
     6ea:	99 0b       	sbc	r25, r25
     6ec:	0e 94 44 06 	call	0xc88	; 0xc88 <__floatsisf>
     6f0:	0e 94 c4 04 	call	0x988	; 0x988 <servo_writeA>
     6f4:	8f e1       	ldi	r24, 0x1F	; 31
     6f6:	9e e4       	ldi	r25, 0x4E	; 78
     6f8:	01 97       	sbiw	r24, 0x01	; 1
     6fa:	f1 f7       	brne	.-4      	; 0x6f8 <main+0x264>
     6fc:	00 c0       	rjmp	.+0      	; 0x6fe <main+0x26a>
     6fe:	00 00       	nop
			_delay_ms(5);
			
			int lecturaEEPROMTemporal1 = 1 + contadorGuardar;
     700:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     704:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
			LecturaEEPROM = eeprom_read_byte((uint8_t*)lecturaEEPROMTemporal1);
     708:	01 96       	adiw	r24, 0x01	; 1
     70a:	0e 94 41 0a 	call	0x1482	; 0x1482 <eeprom_read_byte>
     70e:	68 2f       	mov	r22, r24
     710:	70 e0       	ldi	r23, 0x00	; 0
     712:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <LecturaEEPROM+0x1>
     716:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <LecturaEEPROM>
			LecturaEEPROM = map (LecturaEEPROM, 0, 255, 0, 1023);
     71a:	07 2e       	mov	r0, r23
     71c:	00 0c       	add	r0, r0
     71e:	88 0b       	sbc	r24, r24
     720:	99 0b       	sbc	r25, r25
     722:	0e 94 44 06 	call	0xc88	; 0xc88 <__floatsisf>
     726:	9f 92       	push	r9
     728:	df 93       	push	r29
     72a:	cf 93       	push	r28
     72c:	1f 92       	push	r1
     72e:	a6 01       	movw	r20, r12
     730:	95 01       	movw	r18, r10
     732:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     736:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fixsfsi>
     73a:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <LecturaEEPROM+0x1>
     73e:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <LecturaEEPROM>
			servo_writeB(LecturaEEPROM);
     742:	07 2e       	mov	r0, r23
     744:	00 0c       	add	r0, r0
     746:	88 0b       	sbc	r24, r24
     748:	99 0b       	sbc	r25, r25
     74a:	0e 94 44 06 	call	0xc88	; 0xc88 <__floatsisf>
     74e:	0e 94 f6 04 	call	0x9ec	; 0x9ec <servo_writeB>
     752:	8f e1       	ldi	r24, 0x1F	; 31
     754:	9e e4       	ldi	r25, 0x4E	; 78
     756:	01 97       	sbiw	r24, 0x01	; 1
     758:	f1 f7       	brne	.-4      	; 0x756 <main+0x2c2>
     75a:	00 c0       	rjmp	.+0      	; 0x75c <main+0x2c8>
     75c:	00 00       	nop
			_delay_ms(5);
			
			int lecturaEEPROMTemporal2 = 2 + contadorGuardar;
     75e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     762:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
			LecturaEEPROM = eeprom_read_byte((uint8_t*)lecturaEEPROMTemporal2);
     766:	02 96       	adiw	r24, 0x02	; 2
     768:	0e 94 41 0a 	call	0x1482	; 0x1482 <eeprom_read_byte>
     76c:	68 2f       	mov	r22, r24
     76e:	70 e0       	ldi	r23, 0x00	; 0
     770:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <LecturaEEPROM+0x1>
     774:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <LecturaEEPROM>
			LecturaEEPROM = map (LecturaEEPROM, 0, 255, 0, 75);
     778:	07 2e       	mov	r0, r23
     77a:	00 0c       	add	r0, r0
     77c:	88 0b       	sbc	r24, r24
     77e:	99 0b       	sbc	r25, r25
     780:	0e 94 44 06 	call	0xc88	; 0xc88 <__floatsisf>
     784:	c2 e4       	ldi	r28, 0x42	; 66
     786:	cf 93       	push	r28
     788:	26 e9       	ldi	r18, 0x96	; 150
     78a:	2f 93       	push	r18
     78c:	1f 92       	push	r1
     78e:	1f 92       	push	r1
     790:	a6 01       	movw	r20, r12
     792:	95 01       	movw	r18, r10
     794:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     798:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fixsfsi>
     79c:	86 2f       	mov	r24, r22
     79e:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <LecturaEEPROM>
     7a2:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <LecturaEEPROM+0x1>
			PWM0_dca(LecturaEEPROM, NO_INVERTING);
     7a6:	61 e0       	ldi	r22, 0x01	; 1
     7a8:	0e 94 66 00 	call	0xcc	; 0xcc <PWM0_dca>
     7ac:	8f e1       	ldi	r24, 0x1F	; 31
     7ae:	9e e4       	ldi	r25, 0x4E	; 78
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	f1 f7       	brne	.-4      	; 0x7b0 <main+0x31c>
     7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <main+0x322>
     7b6:	00 00       	nop
			_delay_ms(5);
			
			int lecturaEEPROMTemporal3 = 0 + contadorGuardar;
			LecturaEEPROM = eeprom_read_byte((uint8_t*)lecturaEEPROMTemporal3);
     7b8:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     7bc:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     7c0:	0e 94 41 0a 	call	0x1482	; 0x1482 <eeprom_read_byte>
     7c4:	68 2f       	mov	r22, r24
     7c6:	70 e0       	ldi	r23, 0x00	; 0
     7c8:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <LecturaEEPROM+0x1>
     7cc:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <LecturaEEPROM>
			LecturaEEPROM = map (LecturaEEPROM, 0, 255, 0, 50);
     7d0:	07 2e       	mov	r0, r23
     7d2:	00 0c       	add	r0, r0
     7d4:	88 0b       	sbc	r24, r24
     7d6:	99 0b       	sbc	r25, r25
     7d8:	0e 94 44 06 	call	0xc88	; 0xc88 <__floatsisf>
     7dc:	cf 93       	push	r28
     7de:	28 e4       	ldi	r18, 0x48	; 72
     7e0:	2f 93       	push	r18
     7e2:	1f 92       	push	r1
     7e4:	1f 92       	push	r1
     7e6:	a6 01       	movw	r20, r12
     7e8:	95 01       	movw	r18, r10
     7ea:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     7ee:	0e 94 0c 06 	call	0xc18	; 0xc18 <__fixsfsi>
     7f2:	86 2f       	mov	r24, r22
     7f4:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <LecturaEEPROM>
     7f8:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <LecturaEEPROM+0x1>
			PWM0_dcb(LecturaEEPROM, NO_INVERTING);
     7fc:	61 e0       	ldi	r22, 0x01	; 1
     7fe:	0e 94 7f 00 	call	0xfe	; 0xfe <PWM0_dcb>
     802:	8f e1       	ldi	r24, 0x1F	; 31
     804:	9e e4       	ldi	r25, 0x4E	; 78
     806:	01 97       	sbiw	r24, 0x01	; 1
     808:	f1 f7       	brne	.-4      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     80a:	00 c0       	rjmp	.+0      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
     80c:	00 00       	nop
			_delay_ms(5);
			
			EstadoLeerEEPROM = 0;
     80e:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <EstadoLeerEEPROM+0x1>
     812:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <EstadoLeerEEPROM>
     816:	8d b7       	in	r24, 0x3d	; 61
     818:	9e b7       	in	r25, 0x3e	; 62
     81a:	40 96       	adiw	r24, 0x10	; 16
     81c:	0f b6       	in	r0, 0x3f	; 63
     81e:	f8 94       	cli
     820:	9e bf       	out	0x3e, r25	; 62
     822:	0f be       	out	0x3f, r0	; 63
     824:	8d bf       	out	0x3d, r24	; 61
		
		
		
		
		// int a caracter
		sprintf(buffer, "%d", LecturaEEPROM);
     826:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <LecturaEEPROM+0x1>
     82a:	8f 93       	push	r24
     82c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <LecturaEEPROM>
     830:	8f 93       	push	r24
     832:	80 e0       	ldi	r24, 0x00	; 0
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	9f 93       	push	r25
     838:	8f 93       	push	r24
     83a:	8c e3       	ldi	r24, 0x3C	; 60
     83c:	91 e0       	ldi	r25, 0x01	; 1
     83e:	9f 93       	push	r25
     840:	8f 93       	push	r24
     842:	0e 94 8e 07 	call	0xf1c	; 0xf1c <sprintf>
		// enviar valor
		writeTextUART("Valor de variable: ");
     846:	83 e0       	ldi	r24, 0x03	; 3
     848:	91 e0       	ldi	r25, 0x01	; 1
     84a:	0e 94 40 01 	call	0x280	; 0x280 <writeTextUART>
		writeTextUART(buffer);
     84e:	8c e3       	ldi	r24, 0x3C	; 60
     850:	91 e0       	ldi	r25, 0x01	; 1
     852:	0e 94 40 01 	call	0x280	; 0x280 <writeTextUART>
		writeTextUART("\n");
     856:	87 e1       	ldi	r24, 0x17	; 23
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	0e 94 40 01 	call	0x280	; 0x280 <writeTextUART>
     85e:	9f ef       	ldi	r25, 0xFF	; 255
     860:	23 ed       	ldi	r18, 0xD3	; 211
     862:	80 e3       	ldi	r24, 0x30	; 48
     864:	91 50       	subi	r25, 0x01	; 1
     866:	20 40       	sbci	r18, 0x00	; 0
     868:	80 40       	sbci	r24, 0x00	; 0
     86a:	e1 f7       	brne	.-8      	; 0x864 <__DATA_REGION_LENGTH__+0x64>
     86c:	00 c0       	rjmp	.+0      	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
     86e:	00 00       	nop
     870:	0f 90       	pop	r0
     872:	0f 90       	pop	r0
     874:	0f 90       	pop	r0
     876:	0f 90       	pop	r0
     878:	0f 90       	pop	r0
     87a:	0f 90       	pop	r0
     87c:	17 ce       	rjmp	.-978    	; 0x4ac <main+0x18>
		_delay_ms(1000);
			break;
		
		case 3:	// Estado para UART
		
		PORTB |= (1 << LEDROJO);
     87e:	85 b1       	in	r24, 0x05	; 5
     880:	80 62       	ori	r24, 0x20	; 32
     882:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1<< LEDAZUL);
     884:	85 b1       	in	r24, 0x05	; 5
     886:	87 7f       	andi	r24, 0xF7	; 247
     888:	85 b9       	out	0x05, r24	; 5
		PORTB &= ~(1<< LEDVERDE);
     88a:	85 b1       	in	r24, 0x05	; 5
     88c:	8f 7e       	andi	r24, 0xEF	; 239
     88e:	85 b9       	out	0x05, r24	; 5
		
		break;
     890:	0d ce       	rjmp	.-998    	; 0x4ac <main+0x18>

00000892 <PWM_init>:

#include "Servos.h"

void PWM_init(void){
	// PB1 | PB2
	DDRB |= ( 1<< PB1 )|(1<<PB2);		//  
     892:	84 b1       	in	r24, 0x04	; 4
     894:	86 60       	ori	r24, 0x06	; 6
     896:	84 b9       	out	0x04, r24	; 4
	TCNT1 = 0; // reset
     898:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     89c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	ICR1 = 39999; // TOP
     8a0:	8f e3       	ldi	r24, 0x3F	; 63
     8a2:	9c e9       	ldi	r25, 0x9C	; 156
     8a4:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     8a8:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	TCCR1A =  (1 << COM1A1) | (1 << COM1B1) | (0 << COM1A0) ; // low --> Compare Match
     8ac:	e0 e8       	ldi	r30, 0x80	; 128
     8ae:	f0 e0       	ldi	r31, 0x00	; 0
     8b0:	80 ea       	ldi	r24, 0xA0	; 160
     8b2:	80 83       	st	Z, r24
	TCCR1A |=  (1 << WGM11) | (0 << WGM10) ; // Fast PWM TOP ICR1
     8b4:	80 81       	ld	r24, Z
     8b6:	82 60       	ori	r24, 0x02	; 2
     8b8:	80 83       	st	Z, r24
	TCCR1B = (1 << WGM13) | (1 << WGM12); // Fast PWM TOP ICR1
     8ba:	e1 e8       	ldi	r30, 0x81	; 129
     8bc:	f0 e0       	ldi	r31, 0x00	; 0
     8be:	88 e1       	ldi	r24, 0x18	; 24
     8c0:	80 83       	st	Z, r24
	TCCR1B |= (0 << CS12) | (1 << CS11) | ( 0 << CS10 ); // Prescaler 8
     8c2:	80 81       	ld	r24, Z
     8c4:	82 60       	ori	r24, 0x02	; 2
     8c6:	80 83       	st	Z, r24
     8c8:	08 95       	ret

000008ca <map>:
	OCR1A = map(adc_Value, 0, 1024, 1000, 4800);
}
void servo_writeB(float adc_Value){
	OCR1B = map(adc_Value, 0, 1024, 1000, 4800);
}
float map(float x, float in_min, float in_max, float out_min, float out_max){
     8ca:	4f 92       	push	r4
     8cc:	5f 92       	push	r5
     8ce:	6f 92       	push	r6
     8d0:	7f 92       	push	r7
     8d2:	af 92       	push	r10
     8d4:	bf 92       	push	r11
     8d6:	cf 92       	push	r12
     8d8:	df 92       	push	r13
     8da:	ef 92       	push	r14
     8dc:	ff 92       	push	r15
     8de:	0f 93       	push	r16
     8e0:	1f 93       	push	r17
     8e2:	cf 93       	push	r28
     8e4:	df 93       	push	r29
     8e6:	cd b7       	in	r28, 0x3d	; 61
     8e8:	de b7       	in	r29, 0x3e	; 62
     8ea:	28 97       	sbiw	r28, 0x08	; 8
     8ec:	0f b6       	in	r0, 0x3f	; 63
     8ee:	f8 94       	cli
     8f0:	de bf       	out	0x3e, r29	; 62
     8f2:	0f be       	out	0x3f, r0	; 63
     8f4:	cd bf       	out	0x3d, r28	; 61
     8f6:	29 01       	movw	r4, r18
     8f8:	3a 01       	movw	r6, r20
     8fa:	ed 82       	std	Y+5, r14	; 0x05
     8fc:	fe 82       	std	Y+6, r15	; 0x06
     8fe:	0f 83       	std	Y+7, r16	; 0x07
     900:	18 87       	std	Y+8, r17	; 0x08
	return ((x - in_min)*(out_max - out_min)/(in_max - in_min)) + out_min;
     902:	0e 94 28 05 	call	0xa50	; 0xa50 <__subsf3>
     906:	69 83       	std	Y+1, r22	; 0x01
     908:	7a 83       	std	Y+2, r23	; 0x02
     90a:	8b 83       	std	Y+3, r24	; 0x03
     90c:	9c 83       	std	Y+4, r25	; 0x04
     90e:	a6 01       	movw	r20, r12
     910:	95 01       	movw	r18, r10
     912:	69 8d       	ldd	r22, Y+25	; 0x19
     914:	7a 8d       	ldd	r23, Y+26	; 0x1a
     916:	8b 8d       	ldd	r24, Y+27	; 0x1b
     918:	9c 8d       	ldd	r25, Y+28	; 0x1c
     91a:	0e 94 28 05 	call	0xa50	; 0xa50 <__subsf3>
     91e:	9b 01       	movw	r18, r22
     920:	ac 01       	movw	r20, r24
     922:	69 81       	ldd	r22, Y+1	; 0x01
     924:	7a 81       	ldd	r23, Y+2	; 0x02
     926:	8b 81       	ldd	r24, Y+3	; 0x03
     928:	9c 81       	ldd	r25, Y+4	; 0x04
     92a:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <__mulsf3>
     92e:	69 83       	std	Y+1, r22	; 0x01
     930:	7a 83       	std	Y+2, r23	; 0x02
     932:	8b 83       	std	Y+3, r24	; 0x03
     934:	9c 83       	std	Y+4, r25	; 0x04
     936:	a3 01       	movw	r20, r6
     938:	92 01       	movw	r18, r4
     93a:	c8 01       	movw	r24, r16
     93c:	b7 01       	movw	r22, r14
     93e:	0e 94 28 05 	call	0xa50	; 0xa50 <__subsf3>
     942:	9b 01       	movw	r18, r22
     944:	ac 01       	movw	r20, r24
     946:	69 81       	ldd	r22, Y+1	; 0x01
     948:	7a 81       	ldd	r23, Y+2	; 0x02
     94a:	8b 81       	ldd	r24, Y+3	; 0x03
     94c:	9c 81       	ldd	r25, Y+4	; 0x04
     94e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__divsf3>
     952:	9b 01       	movw	r18, r22
     954:	ac 01       	movw	r20, r24
     956:	c6 01       	movw	r24, r12
     958:	b5 01       	movw	r22, r10
     95a:	0e 94 29 05 	call	0xa52	; 0xa52 <__addsf3>
     95e:	28 96       	adiw	r28, 0x08	; 8
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	f8 94       	cli
     964:	de bf       	out	0x3e, r29	; 62
     966:	0f be       	out	0x3f, r0	; 63
     968:	cd bf       	out	0x3d, r28	; 61
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	1f 91       	pop	r17
     970:	0f 91       	pop	r16
     972:	ff 90       	pop	r15
     974:	ef 90       	pop	r14
     976:	df 90       	pop	r13
     978:	cf 90       	pop	r12
     97a:	bf 90       	pop	r11
     97c:	af 90       	pop	r10
     97e:	7f 90       	pop	r7
     980:	6f 90       	pop	r6
     982:	5f 90       	pop	r5
     984:	4f 90       	pop	r4
     986:	08 95       	ret

00000988 <servo_writeA>:
	TCCR1A =  (1 << COM1A1) | (1 << COM1B1) | (0 << COM1A0) ; // low --> Compare Match
	TCCR1A |=  (1 << WGM11) | (0 << WGM10) ; // Fast PWM TOP ICR1
	TCCR1B = (1 << WGM13) | (1 << WGM12); // Fast PWM TOP ICR1
	TCCR1B |= (0 << CS12) | (1 << CS11) | ( 0 << CS10 ); // Prescaler 8
}
void servo_writeA(float adc_Value){
     988:	af 92       	push	r10
     98a:	bf 92       	push	r11
     98c:	cf 92       	push	r12
     98e:	df 92       	push	r13
     990:	ef 92       	push	r14
     992:	ff 92       	push	r15
     994:	0f 93       	push	r16
     996:	1f 93       	push	r17
	OCR1A = map(adc_Value, 0, 1024, 1000, 4800);
     998:	25 e4       	ldi	r18, 0x45	; 69
     99a:	2f 93       	push	r18
     99c:	26 e9       	ldi	r18, 0x96	; 150
     99e:	2f 93       	push	r18
     9a0:	1f 92       	push	r1
     9a2:	1f 92       	push	r1
     9a4:	0f 2e       	mov	r0, r31
     9a6:	a1 2c       	mov	r10, r1
     9a8:	b1 2c       	mov	r11, r1
     9aa:	fa e7       	ldi	r31, 0x7A	; 122
     9ac:	cf 2e       	mov	r12, r31
     9ae:	f4 e4       	ldi	r31, 0x44	; 68
     9b0:	df 2e       	mov	r13, r31
     9b2:	f0 2d       	mov	r31, r0
     9b4:	e1 2c       	mov	r14, r1
     9b6:	f1 2c       	mov	r15, r1
     9b8:	00 e8       	ldi	r16, 0x80	; 128
     9ba:	14 e4       	ldi	r17, 0x44	; 68
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	a9 01       	movw	r20, r18
     9c2:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     9c6:	0f 90       	pop	r0
     9c8:	0f 90       	pop	r0
     9ca:	0f 90       	pop	r0
     9cc:	0f 90       	pop	r0
     9ce:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     9d2:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     9d6:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
}
     9da:	1f 91       	pop	r17
     9dc:	0f 91       	pop	r16
     9de:	ff 90       	pop	r15
     9e0:	ef 90       	pop	r14
     9e2:	df 90       	pop	r13
     9e4:	cf 90       	pop	r12
     9e6:	bf 90       	pop	r11
     9e8:	af 90       	pop	r10
     9ea:	08 95       	ret

000009ec <servo_writeB>:
void servo_writeB(float adc_Value){
     9ec:	af 92       	push	r10
     9ee:	bf 92       	push	r11
     9f0:	cf 92       	push	r12
     9f2:	df 92       	push	r13
     9f4:	ef 92       	push	r14
     9f6:	ff 92       	push	r15
     9f8:	0f 93       	push	r16
     9fa:	1f 93       	push	r17
	OCR1B = map(adc_Value, 0, 1024, 1000, 4800);
     9fc:	25 e4       	ldi	r18, 0x45	; 69
     9fe:	2f 93       	push	r18
     a00:	26 e9       	ldi	r18, 0x96	; 150
     a02:	2f 93       	push	r18
     a04:	1f 92       	push	r1
     a06:	1f 92       	push	r1
     a08:	0f 2e       	mov	r0, r31
     a0a:	a1 2c       	mov	r10, r1
     a0c:	b1 2c       	mov	r11, r1
     a0e:	fa e7       	ldi	r31, 0x7A	; 122
     a10:	cf 2e       	mov	r12, r31
     a12:	f4 e4       	ldi	r31, 0x44	; 68
     a14:	df 2e       	mov	r13, r31
     a16:	f0 2d       	mov	r31, r0
     a18:	e1 2c       	mov	r14, r1
     a1a:	f1 2c       	mov	r15, r1
     a1c:	00 e8       	ldi	r16, 0x80	; 128
     a1e:	14 e4       	ldi	r17, 0x44	; 68
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	a9 01       	movw	r20, r18
     a26:	0e 94 65 04 	call	0x8ca	; 0x8ca <map>
     a2a:	0f 90       	pop	r0
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	0f 90       	pop	r0
     a32:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     a36:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     a3a:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
}
     a3e:	1f 91       	pop	r17
     a40:	0f 91       	pop	r16
     a42:	ff 90       	pop	r15
     a44:	ef 90       	pop	r14
     a46:	df 90       	pop	r13
     a48:	cf 90       	pop	r12
     a4a:	bf 90       	pop	r11
     a4c:	af 90       	pop	r10
     a4e:	08 95       	ret

00000a50 <__subsf3>:
     a50:	50 58       	subi	r21, 0x80	; 128

00000a52 <__addsf3>:
     a52:	bb 27       	eor	r27, r27
     a54:	aa 27       	eor	r26, r26
     a56:	0e 94 40 05 	call	0xa80	; 0xa80 <__addsf3x>
     a5a:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__fp_round>
     a5e:	0e 94 ac 06 	call	0xd58	; 0xd58 <__fp_pscA>
     a62:	38 f0       	brcs	.+14     	; 0xa72 <__addsf3+0x20>
     a64:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_pscB>
     a68:	20 f0       	brcs	.+8      	; 0xa72 <__addsf3+0x20>
     a6a:	39 f4       	brne	.+14     	; 0xa7a <__addsf3+0x28>
     a6c:	9f 3f       	cpi	r25, 0xFF	; 255
     a6e:	19 f4       	brne	.+6      	; 0xa76 <__addsf3+0x24>
     a70:	26 f4       	brtc	.+8      	; 0xa7a <__addsf3+0x28>
     a72:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__fp_nan>
     a76:	0e f4       	brtc	.+2      	; 0xa7a <__addsf3+0x28>
     a78:	e0 95       	com	r30
     a7a:	e7 fb       	bst	r30, 7
     a7c:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__fp_inf>

00000a80 <__addsf3x>:
     a80:	e9 2f       	mov	r30, r25
     a82:	0e 94 cb 06 	call	0xd96	; 0xd96 <__fp_split3>
     a86:	58 f3       	brcs	.-42     	; 0xa5e <__addsf3+0xc>
     a88:	ba 17       	cp	r27, r26
     a8a:	62 07       	cpc	r22, r18
     a8c:	73 07       	cpc	r23, r19
     a8e:	84 07       	cpc	r24, r20
     a90:	95 07       	cpc	r25, r21
     a92:	20 f0       	brcs	.+8      	; 0xa9c <__addsf3x+0x1c>
     a94:	79 f4       	brne	.+30     	; 0xab4 <__addsf3x+0x34>
     a96:	a6 f5       	brtc	.+104    	; 0xb00 <__addsf3x+0x80>
     a98:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__fp_zero>
     a9c:	0e f4       	brtc	.+2      	; 0xaa0 <__addsf3x+0x20>
     a9e:	e0 95       	com	r30
     aa0:	0b 2e       	mov	r0, r27
     aa2:	ba 2f       	mov	r27, r26
     aa4:	a0 2d       	mov	r26, r0
     aa6:	0b 01       	movw	r0, r22
     aa8:	b9 01       	movw	r22, r18
     aaa:	90 01       	movw	r18, r0
     aac:	0c 01       	movw	r0, r24
     aae:	ca 01       	movw	r24, r20
     ab0:	a0 01       	movw	r20, r0
     ab2:	11 24       	eor	r1, r1
     ab4:	ff 27       	eor	r31, r31
     ab6:	59 1b       	sub	r21, r25
     ab8:	99 f0       	breq	.+38     	; 0xae0 <__addsf3x+0x60>
     aba:	59 3f       	cpi	r21, 0xF9	; 249
     abc:	50 f4       	brcc	.+20     	; 0xad2 <__addsf3x+0x52>
     abe:	50 3e       	cpi	r21, 0xE0	; 224
     ac0:	68 f1       	brcs	.+90     	; 0xb1c <__addsf3x+0x9c>
     ac2:	1a 16       	cp	r1, r26
     ac4:	f0 40       	sbci	r31, 0x00	; 0
     ac6:	a2 2f       	mov	r26, r18
     ac8:	23 2f       	mov	r18, r19
     aca:	34 2f       	mov	r19, r20
     acc:	44 27       	eor	r20, r20
     ace:	58 5f       	subi	r21, 0xF8	; 248
     ad0:	f3 cf       	rjmp	.-26     	; 0xab8 <__addsf3x+0x38>
     ad2:	46 95       	lsr	r20
     ad4:	37 95       	ror	r19
     ad6:	27 95       	ror	r18
     ad8:	a7 95       	ror	r26
     ada:	f0 40       	sbci	r31, 0x00	; 0
     adc:	53 95       	inc	r21
     ade:	c9 f7       	brne	.-14     	; 0xad2 <__addsf3x+0x52>
     ae0:	7e f4       	brtc	.+30     	; 0xb00 <__addsf3x+0x80>
     ae2:	1f 16       	cp	r1, r31
     ae4:	ba 0b       	sbc	r27, r26
     ae6:	62 0b       	sbc	r22, r18
     ae8:	73 0b       	sbc	r23, r19
     aea:	84 0b       	sbc	r24, r20
     aec:	ba f0       	brmi	.+46     	; 0xb1c <__addsf3x+0x9c>
     aee:	91 50       	subi	r25, 0x01	; 1
     af0:	a1 f0       	breq	.+40     	; 0xb1a <__addsf3x+0x9a>
     af2:	ff 0f       	add	r31, r31
     af4:	bb 1f       	adc	r27, r27
     af6:	66 1f       	adc	r22, r22
     af8:	77 1f       	adc	r23, r23
     afa:	88 1f       	adc	r24, r24
     afc:	c2 f7       	brpl	.-16     	; 0xaee <__addsf3x+0x6e>
     afe:	0e c0       	rjmp	.+28     	; 0xb1c <__addsf3x+0x9c>
     b00:	ba 0f       	add	r27, r26
     b02:	62 1f       	adc	r22, r18
     b04:	73 1f       	adc	r23, r19
     b06:	84 1f       	adc	r24, r20
     b08:	48 f4       	brcc	.+18     	; 0xb1c <__addsf3x+0x9c>
     b0a:	87 95       	ror	r24
     b0c:	77 95       	ror	r23
     b0e:	67 95       	ror	r22
     b10:	b7 95       	ror	r27
     b12:	f7 95       	ror	r31
     b14:	9e 3f       	cpi	r25, 0xFE	; 254
     b16:	08 f0       	brcs	.+2      	; 0xb1a <__addsf3x+0x9a>
     b18:	b0 cf       	rjmp	.-160    	; 0xa7a <__addsf3+0x28>
     b1a:	93 95       	inc	r25
     b1c:	88 0f       	add	r24, r24
     b1e:	08 f0       	brcs	.+2      	; 0xb22 <__addsf3x+0xa2>
     b20:	99 27       	eor	r25, r25
     b22:	ee 0f       	add	r30, r30
     b24:	97 95       	ror	r25
     b26:	87 95       	ror	r24
     b28:	08 95       	ret

00000b2a <__cmpsf2>:
     b2a:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__fp_cmp>
     b2e:	08 f4       	brcc	.+2      	; 0xb32 <__cmpsf2+0x8>
     b30:	81 e0       	ldi	r24, 0x01	; 1
     b32:	08 95       	ret

00000b34 <__divsf3>:
     b34:	0e 94 ae 05 	call	0xb5c	; 0xb5c <__divsf3x>
     b38:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__fp_round>
     b3c:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_pscB>
     b40:	58 f0       	brcs	.+22     	; 0xb58 <__divsf3+0x24>
     b42:	0e 94 ac 06 	call	0xd58	; 0xd58 <__fp_pscA>
     b46:	40 f0       	brcs	.+16     	; 0xb58 <__divsf3+0x24>
     b48:	29 f4       	brne	.+10     	; 0xb54 <__divsf3+0x20>
     b4a:	5f 3f       	cpi	r21, 0xFF	; 255
     b4c:	29 f0       	breq	.+10     	; 0xb58 <__divsf3+0x24>
     b4e:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__fp_inf>
     b52:	51 11       	cpse	r21, r1
     b54:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__fp_szero>
     b58:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__fp_nan>

00000b5c <__divsf3x>:
     b5c:	0e 94 cb 06 	call	0xd96	; 0xd96 <__fp_split3>
     b60:	68 f3       	brcs	.-38     	; 0xb3c <__divsf3+0x8>

00000b62 <__divsf3_pse>:
     b62:	99 23       	and	r25, r25
     b64:	b1 f3       	breq	.-20     	; 0xb52 <__divsf3+0x1e>
     b66:	55 23       	and	r21, r21
     b68:	91 f3       	breq	.-28     	; 0xb4e <__divsf3+0x1a>
     b6a:	95 1b       	sub	r25, r21
     b6c:	55 0b       	sbc	r21, r21
     b6e:	bb 27       	eor	r27, r27
     b70:	aa 27       	eor	r26, r26
     b72:	62 17       	cp	r22, r18
     b74:	73 07       	cpc	r23, r19
     b76:	84 07       	cpc	r24, r20
     b78:	38 f0       	brcs	.+14     	; 0xb88 <__divsf3_pse+0x26>
     b7a:	9f 5f       	subi	r25, 0xFF	; 255
     b7c:	5f 4f       	sbci	r21, 0xFF	; 255
     b7e:	22 0f       	add	r18, r18
     b80:	33 1f       	adc	r19, r19
     b82:	44 1f       	adc	r20, r20
     b84:	aa 1f       	adc	r26, r26
     b86:	a9 f3       	breq	.-22     	; 0xb72 <__divsf3_pse+0x10>
     b88:	35 d0       	rcall	.+106    	; 0xbf4 <__divsf3_pse+0x92>
     b8a:	0e 2e       	mov	r0, r30
     b8c:	3a f0       	brmi	.+14     	; 0xb9c <__divsf3_pse+0x3a>
     b8e:	e0 e8       	ldi	r30, 0x80	; 128
     b90:	32 d0       	rcall	.+100    	; 0xbf6 <__divsf3_pse+0x94>
     b92:	91 50       	subi	r25, 0x01	; 1
     b94:	50 40       	sbci	r21, 0x00	; 0
     b96:	e6 95       	lsr	r30
     b98:	00 1c       	adc	r0, r0
     b9a:	ca f7       	brpl	.-14     	; 0xb8e <__divsf3_pse+0x2c>
     b9c:	2b d0       	rcall	.+86     	; 0xbf4 <__divsf3_pse+0x92>
     b9e:	fe 2f       	mov	r31, r30
     ba0:	29 d0       	rcall	.+82     	; 0xbf4 <__divsf3_pse+0x92>
     ba2:	66 0f       	add	r22, r22
     ba4:	77 1f       	adc	r23, r23
     ba6:	88 1f       	adc	r24, r24
     ba8:	bb 1f       	adc	r27, r27
     baa:	26 17       	cp	r18, r22
     bac:	37 07       	cpc	r19, r23
     bae:	48 07       	cpc	r20, r24
     bb0:	ab 07       	cpc	r26, r27
     bb2:	b0 e8       	ldi	r27, 0x80	; 128
     bb4:	09 f0       	breq	.+2      	; 0xbb8 <__divsf3_pse+0x56>
     bb6:	bb 0b       	sbc	r27, r27
     bb8:	80 2d       	mov	r24, r0
     bba:	bf 01       	movw	r22, r30
     bbc:	ff 27       	eor	r31, r31
     bbe:	93 58       	subi	r25, 0x83	; 131
     bc0:	5f 4f       	sbci	r21, 0xFF	; 255
     bc2:	3a f0       	brmi	.+14     	; 0xbd2 <__divsf3_pse+0x70>
     bc4:	9e 3f       	cpi	r25, 0xFE	; 254
     bc6:	51 05       	cpc	r21, r1
     bc8:	78 f0       	brcs	.+30     	; 0xbe8 <__divsf3_pse+0x86>
     bca:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__fp_inf>
     bce:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__fp_szero>
     bd2:	5f 3f       	cpi	r21, 0xFF	; 255
     bd4:	e4 f3       	brlt	.-8      	; 0xbce <__divsf3_pse+0x6c>
     bd6:	98 3e       	cpi	r25, 0xE8	; 232
     bd8:	d4 f3       	brlt	.-12     	; 0xbce <__divsf3_pse+0x6c>
     bda:	86 95       	lsr	r24
     bdc:	77 95       	ror	r23
     bde:	67 95       	ror	r22
     be0:	b7 95       	ror	r27
     be2:	f7 95       	ror	r31
     be4:	9f 5f       	subi	r25, 0xFF	; 255
     be6:	c9 f7       	brne	.-14     	; 0xbda <__divsf3_pse+0x78>
     be8:	88 0f       	add	r24, r24
     bea:	91 1d       	adc	r25, r1
     bec:	96 95       	lsr	r25
     bee:	87 95       	ror	r24
     bf0:	97 f9       	bld	r25, 7
     bf2:	08 95       	ret
     bf4:	e1 e0       	ldi	r30, 0x01	; 1
     bf6:	66 0f       	add	r22, r22
     bf8:	77 1f       	adc	r23, r23
     bfa:	88 1f       	adc	r24, r24
     bfc:	bb 1f       	adc	r27, r27
     bfe:	62 17       	cp	r22, r18
     c00:	73 07       	cpc	r23, r19
     c02:	84 07       	cpc	r24, r20
     c04:	ba 07       	cpc	r27, r26
     c06:	20 f0       	brcs	.+8      	; 0xc10 <__divsf3_pse+0xae>
     c08:	62 1b       	sub	r22, r18
     c0a:	73 0b       	sbc	r23, r19
     c0c:	84 0b       	sbc	r24, r20
     c0e:	ba 0b       	sbc	r27, r26
     c10:	ee 1f       	adc	r30, r30
     c12:	88 f7       	brcc	.-30     	; 0xbf6 <__divsf3_pse+0x94>
     c14:	e0 95       	com	r30
     c16:	08 95       	ret

00000c18 <__fixsfsi>:
     c18:	0e 94 13 06 	call	0xc26	; 0xc26 <__fixunssfsi>
     c1c:	68 94       	set
     c1e:	b1 11       	cpse	r27, r1
     c20:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__fp_szero>
     c24:	08 95       	ret

00000c26 <__fixunssfsi>:
     c26:	0e 94 d3 06 	call	0xda6	; 0xda6 <__fp_splitA>
     c2a:	88 f0       	brcs	.+34     	; 0xc4e <__fixunssfsi+0x28>
     c2c:	9f 57       	subi	r25, 0x7F	; 127
     c2e:	98 f0       	brcs	.+38     	; 0xc56 <__fixunssfsi+0x30>
     c30:	b9 2f       	mov	r27, r25
     c32:	99 27       	eor	r25, r25
     c34:	b7 51       	subi	r27, 0x17	; 23
     c36:	b0 f0       	brcs	.+44     	; 0xc64 <__fixunssfsi+0x3e>
     c38:	e1 f0       	breq	.+56     	; 0xc72 <__fixunssfsi+0x4c>
     c3a:	66 0f       	add	r22, r22
     c3c:	77 1f       	adc	r23, r23
     c3e:	88 1f       	adc	r24, r24
     c40:	99 1f       	adc	r25, r25
     c42:	1a f0       	brmi	.+6      	; 0xc4a <__fixunssfsi+0x24>
     c44:	ba 95       	dec	r27
     c46:	c9 f7       	brne	.-14     	; 0xc3a <__fixunssfsi+0x14>
     c48:	14 c0       	rjmp	.+40     	; 0xc72 <__fixunssfsi+0x4c>
     c4a:	b1 30       	cpi	r27, 0x01	; 1
     c4c:	91 f0       	breq	.+36     	; 0xc72 <__fixunssfsi+0x4c>
     c4e:	0e 94 ed 06 	call	0xdda	; 0xdda <__fp_zero>
     c52:	b1 e0       	ldi	r27, 0x01	; 1
     c54:	08 95       	ret
     c56:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__fp_zero>
     c5a:	67 2f       	mov	r22, r23
     c5c:	78 2f       	mov	r23, r24
     c5e:	88 27       	eor	r24, r24
     c60:	b8 5f       	subi	r27, 0xF8	; 248
     c62:	39 f0       	breq	.+14     	; 0xc72 <__fixunssfsi+0x4c>
     c64:	b9 3f       	cpi	r27, 0xF9	; 249
     c66:	cc f3       	brlt	.-14     	; 0xc5a <__fixunssfsi+0x34>
     c68:	86 95       	lsr	r24
     c6a:	77 95       	ror	r23
     c6c:	67 95       	ror	r22
     c6e:	b3 95       	inc	r27
     c70:	d9 f7       	brne	.-10     	; 0xc68 <__fixunssfsi+0x42>
     c72:	3e f4       	brtc	.+14     	; 0xc82 <__fixunssfsi+0x5c>
     c74:	90 95       	com	r25
     c76:	80 95       	com	r24
     c78:	70 95       	com	r23
     c7a:	61 95       	neg	r22
     c7c:	7f 4f       	sbci	r23, 0xFF	; 255
     c7e:	8f 4f       	sbci	r24, 0xFF	; 255
     c80:	9f 4f       	sbci	r25, 0xFF	; 255
     c82:	08 95       	ret

00000c84 <__floatunsisf>:
     c84:	e8 94       	clt
     c86:	09 c0       	rjmp	.+18     	; 0xc9a <__floatsisf+0x12>

00000c88 <__floatsisf>:
     c88:	97 fb       	bst	r25, 7
     c8a:	3e f4       	brtc	.+14     	; 0xc9a <__floatsisf+0x12>
     c8c:	90 95       	com	r25
     c8e:	80 95       	com	r24
     c90:	70 95       	com	r23
     c92:	61 95       	neg	r22
     c94:	7f 4f       	sbci	r23, 0xFF	; 255
     c96:	8f 4f       	sbci	r24, 0xFF	; 255
     c98:	9f 4f       	sbci	r25, 0xFF	; 255
     c9a:	99 23       	and	r25, r25
     c9c:	a9 f0       	breq	.+42     	; 0xcc8 <__floatsisf+0x40>
     c9e:	f9 2f       	mov	r31, r25
     ca0:	96 e9       	ldi	r25, 0x96	; 150
     ca2:	bb 27       	eor	r27, r27
     ca4:	93 95       	inc	r25
     ca6:	f6 95       	lsr	r31
     ca8:	87 95       	ror	r24
     caa:	77 95       	ror	r23
     cac:	67 95       	ror	r22
     cae:	b7 95       	ror	r27
     cb0:	f1 11       	cpse	r31, r1
     cb2:	f8 cf       	rjmp	.-16     	; 0xca4 <__floatsisf+0x1c>
     cb4:	fa f4       	brpl	.+62     	; 0xcf4 <__floatsisf+0x6c>
     cb6:	bb 0f       	add	r27, r27
     cb8:	11 f4       	brne	.+4      	; 0xcbe <__floatsisf+0x36>
     cba:	60 ff       	sbrs	r22, 0
     cbc:	1b c0       	rjmp	.+54     	; 0xcf4 <__floatsisf+0x6c>
     cbe:	6f 5f       	subi	r22, 0xFF	; 255
     cc0:	7f 4f       	sbci	r23, 0xFF	; 255
     cc2:	8f 4f       	sbci	r24, 0xFF	; 255
     cc4:	9f 4f       	sbci	r25, 0xFF	; 255
     cc6:	16 c0       	rjmp	.+44     	; 0xcf4 <__floatsisf+0x6c>
     cc8:	88 23       	and	r24, r24
     cca:	11 f0       	breq	.+4      	; 0xcd0 <__floatsisf+0x48>
     ccc:	96 e9       	ldi	r25, 0x96	; 150
     cce:	11 c0       	rjmp	.+34     	; 0xcf2 <__floatsisf+0x6a>
     cd0:	77 23       	and	r23, r23
     cd2:	21 f0       	breq	.+8      	; 0xcdc <__floatsisf+0x54>
     cd4:	9e e8       	ldi	r25, 0x8E	; 142
     cd6:	87 2f       	mov	r24, r23
     cd8:	76 2f       	mov	r23, r22
     cda:	05 c0       	rjmp	.+10     	; 0xce6 <__floatsisf+0x5e>
     cdc:	66 23       	and	r22, r22
     cde:	71 f0       	breq	.+28     	; 0xcfc <__floatsisf+0x74>
     ce0:	96 e8       	ldi	r25, 0x86	; 134
     ce2:	86 2f       	mov	r24, r22
     ce4:	70 e0       	ldi	r23, 0x00	; 0
     ce6:	60 e0       	ldi	r22, 0x00	; 0
     ce8:	2a f0       	brmi	.+10     	; 0xcf4 <__floatsisf+0x6c>
     cea:	9a 95       	dec	r25
     cec:	66 0f       	add	r22, r22
     cee:	77 1f       	adc	r23, r23
     cf0:	88 1f       	adc	r24, r24
     cf2:	da f7       	brpl	.-10     	; 0xcea <__floatsisf+0x62>
     cf4:	88 0f       	add	r24, r24
     cf6:	96 95       	lsr	r25
     cf8:	87 95       	ror	r24
     cfa:	97 f9       	bld	r25, 7
     cfc:	08 95       	ret

00000cfe <__fp_cmp>:
     cfe:	99 0f       	add	r25, r25
     d00:	00 08       	sbc	r0, r0
     d02:	55 0f       	add	r21, r21
     d04:	aa 0b       	sbc	r26, r26
     d06:	e0 e8       	ldi	r30, 0x80	; 128
     d08:	fe ef       	ldi	r31, 0xFE	; 254
     d0a:	16 16       	cp	r1, r22
     d0c:	17 06       	cpc	r1, r23
     d0e:	e8 07       	cpc	r30, r24
     d10:	f9 07       	cpc	r31, r25
     d12:	c0 f0       	brcs	.+48     	; 0xd44 <__fp_cmp+0x46>
     d14:	12 16       	cp	r1, r18
     d16:	13 06       	cpc	r1, r19
     d18:	e4 07       	cpc	r30, r20
     d1a:	f5 07       	cpc	r31, r21
     d1c:	98 f0       	brcs	.+38     	; 0xd44 <__fp_cmp+0x46>
     d1e:	62 1b       	sub	r22, r18
     d20:	73 0b       	sbc	r23, r19
     d22:	84 0b       	sbc	r24, r20
     d24:	95 0b       	sbc	r25, r21
     d26:	39 f4       	brne	.+14     	; 0xd36 <__fp_cmp+0x38>
     d28:	0a 26       	eor	r0, r26
     d2a:	61 f0       	breq	.+24     	; 0xd44 <__fp_cmp+0x46>
     d2c:	23 2b       	or	r18, r19
     d2e:	24 2b       	or	r18, r20
     d30:	25 2b       	or	r18, r21
     d32:	21 f4       	brne	.+8      	; 0xd3c <__fp_cmp+0x3e>
     d34:	08 95       	ret
     d36:	0a 26       	eor	r0, r26
     d38:	09 f4       	brne	.+2      	; 0xd3c <__fp_cmp+0x3e>
     d3a:	a1 40       	sbci	r26, 0x01	; 1
     d3c:	a6 95       	lsr	r26
     d3e:	8f ef       	ldi	r24, 0xFF	; 255
     d40:	81 1d       	adc	r24, r1
     d42:	81 1d       	adc	r24, r1
     d44:	08 95       	ret

00000d46 <__fp_inf>:
     d46:	97 f9       	bld	r25, 7
     d48:	9f 67       	ori	r25, 0x7F	; 127
     d4a:	80 e8       	ldi	r24, 0x80	; 128
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	60 e0       	ldi	r22, 0x00	; 0
     d50:	08 95       	ret

00000d52 <__fp_nan>:
     d52:	9f ef       	ldi	r25, 0xFF	; 255
     d54:	80 ec       	ldi	r24, 0xC0	; 192
     d56:	08 95       	ret

00000d58 <__fp_pscA>:
     d58:	00 24       	eor	r0, r0
     d5a:	0a 94       	dec	r0
     d5c:	16 16       	cp	r1, r22
     d5e:	17 06       	cpc	r1, r23
     d60:	18 06       	cpc	r1, r24
     d62:	09 06       	cpc	r0, r25
     d64:	08 95       	ret

00000d66 <__fp_pscB>:
     d66:	00 24       	eor	r0, r0
     d68:	0a 94       	dec	r0
     d6a:	12 16       	cp	r1, r18
     d6c:	13 06       	cpc	r1, r19
     d6e:	14 06       	cpc	r1, r20
     d70:	05 06       	cpc	r0, r21
     d72:	08 95       	ret

00000d74 <__fp_round>:
     d74:	09 2e       	mov	r0, r25
     d76:	03 94       	inc	r0
     d78:	00 0c       	add	r0, r0
     d7a:	11 f4       	brne	.+4      	; 0xd80 <__fp_round+0xc>
     d7c:	88 23       	and	r24, r24
     d7e:	52 f0       	brmi	.+20     	; 0xd94 <__fp_round+0x20>
     d80:	bb 0f       	add	r27, r27
     d82:	40 f4       	brcc	.+16     	; 0xd94 <__fp_round+0x20>
     d84:	bf 2b       	or	r27, r31
     d86:	11 f4       	brne	.+4      	; 0xd8c <__fp_round+0x18>
     d88:	60 ff       	sbrs	r22, 0
     d8a:	04 c0       	rjmp	.+8      	; 0xd94 <__fp_round+0x20>
     d8c:	6f 5f       	subi	r22, 0xFF	; 255
     d8e:	7f 4f       	sbci	r23, 0xFF	; 255
     d90:	8f 4f       	sbci	r24, 0xFF	; 255
     d92:	9f 4f       	sbci	r25, 0xFF	; 255
     d94:	08 95       	ret

00000d96 <__fp_split3>:
     d96:	57 fd       	sbrc	r21, 7
     d98:	90 58       	subi	r25, 0x80	; 128
     d9a:	44 0f       	add	r20, r20
     d9c:	55 1f       	adc	r21, r21
     d9e:	59 f0       	breq	.+22     	; 0xdb6 <__fp_splitA+0x10>
     da0:	5f 3f       	cpi	r21, 0xFF	; 255
     da2:	71 f0       	breq	.+28     	; 0xdc0 <__fp_splitA+0x1a>
     da4:	47 95       	ror	r20

00000da6 <__fp_splitA>:
     da6:	88 0f       	add	r24, r24
     da8:	97 fb       	bst	r25, 7
     daa:	99 1f       	adc	r25, r25
     dac:	61 f0       	breq	.+24     	; 0xdc6 <__fp_splitA+0x20>
     dae:	9f 3f       	cpi	r25, 0xFF	; 255
     db0:	79 f0       	breq	.+30     	; 0xdd0 <__fp_splitA+0x2a>
     db2:	87 95       	ror	r24
     db4:	08 95       	ret
     db6:	12 16       	cp	r1, r18
     db8:	13 06       	cpc	r1, r19
     dba:	14 06       	cpc	r1, r20
     dbc:	55 1f       	adc	r21, r21
     dbe:	f2 cf       	rjmp	.-28     	; 0xda4 <__fp_split3+0xe>
     dc0:	46 95       	lsr	r20
     dc2:	f1 df       	rcall	.-30     	; 0xda6 <__fp_splitA>
     dc4:	08 c0       	rjmp	.+16     	; 0xdd6 <__fp_splitA+0x30>
     dc6:	16 16       	cp	r1, r22
     dc8:	17 06       	cpc	r1, r23
     dca:	18 06       	cpc	r1, r24
     dcc:	99 1f       	adc	r25, r25
     dce:	f1 cf       	rjmp	.-30     	; 0xdb2 <__fp_splitA+0xc>
     dd0:	86 95       	lsr	r24
     dd2:	71 05       	cpc	r23, r1
     dd4:	61 05       	cpc	r22, r1
     dd6:	08 94       	sec
     dd8:	08 95       	ret

00000dda <__fp_zero>:
     dda:	e8 94       	clt

00000ddc <__fp_szero>:
     ddc:	bb 27       	eor	r27, r27
     dde:	66 27       	eor	r22, r22
     de0:	77 27       	eor	r23, r23
     de2:	cb 01       	movw	r24, r22
     de4:	97 f9       	bld	r25, 7
     de6:	08 95       	ret

00000de8 <__gesf2>:
     de8:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__fp_cmp>
     dec:	08 f4       	brcc	.+2      	; 0xdf0 <__gesf2+0x8>
     dee:	8f ef       	ldi	r24, 0xFF	; 255
     df0:	08 95       	ret

00000df2 <__mulsf3>:
     df2:	0e 94 0c 07 	call	0xe18	; 0xe18 <__mulsf3x>
     df6:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__fp_round>
     dfa:	0e 94 ac 06 	call	0xd58	; 0xd58 <__fp_pscA>
     dfe:	38 f0       	brcs	.+14     	; 0xe0e <__mulsf3+0x1c>
     e00:	0e 94 b3 06 	call	0xd66	; 0xd66 <__fp_pscB>
     e04:	20 f0       	brcs	.+8      	; 0xe0e <__mulsf3+0x1c>
     e06:	95 23       	and	r25, r21
     e08:	11 f0       	breq	.+4      	; 0xe0e <__mulsf3+0x1c>
     e0a:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__fp_inf>
     e0e:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__fp_nan>
     e12:	11 24       	eor	r1, r1
     e14:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__fp_szero>

00000e18 <__mulsf3x>:
     e18:	0e 94 cb 06 	call	0xd96	; 0xd96 <__fp_split3>
     e1c:	70 f3       	brcs	.-36     	; 0xdfa <__mulsf3+0x8>

00000e1e <__mulsf3_pse>:
     e1e:	95 9f       	mul	r25, r21
     e20:	c1 f3       	breq	.-16     	; 0xe12 <__mulsf3+0x20>
     e22:	95 0f       	add	r25, r21
     e24:	50 e0       	ldi	r21, 0x00	; 0
     e26:	55 1f       	adc	r21, r21
     e28:	62 9f       	mul	r22, r18
     e2a:	f0 01       	movw	r30, r0
     e2c:	72 9f       	mul	r23, r18
     e2e:	bb 27       	eor	r27, r27
     e30:	f0 0d       	add	r31, r0
     e32:	b1 1d       	adc	r27, r1
     e34:	63 9f       	mul	r22, r19
     e36:	aa 27       	eor	r26, r26
     e38:	f0 0d       	add	r31, r0
     e3a:	b1 1d       	adc	r27, r1
     e3c:	aa 1f       	adc	r26, r26
     e3e:	64 9f       	mul	r22, r20
     e40:	66 27       	eor	r22, r22
     e42:	b0 0d       	add	r27, r0
     e44:	a1 1d       	adc	r26, r1
     e46:	66 1f       	adc	r22, r22
     e48:	82 9f       	mul	r24, r18
     e4a:	22 27       	eor	r18, r18
     e4c:	b0 0d       	add	r27, r0
     e4e:	a1 1d       	adc	r26, r1
     e50:	62 1f       	adc	r22, r18
     e52:	73 9f       	mul	r23, r19
     e54:	b0 0d       	add	r27, r0
     e56:	a1 1d       	adc	r26, r1
     e58:	62 1f       	adc	r22, r18
     e5a:	83 9f       	mul	r24, r19
     e5c:	a0 0d       	add	r26, r0
     e5e:	61 1d       	adc	r22, r1
     e60:	22 1f       	adc	r18, r18
     e62:	74 9f       	mul	r23, r20
     e64:	33 27       	eor	r19, r19
     e66:	a0 0d       	add	r26, r0
     e68:	61 1d       	adc	r22, r1
     e6a:	23 1f       	adc	r18, r19
     e6c:	84 9f       	mul	r24, r20
     e6e:	60 0d       	add	r22, r0
     e70:	21 1d       	adc	r18, r1
     e72:	82 2f       	mov	r24, r18
     e74:	76 2f       	mov	r23, r22
     e76:	6a 2f       	mov	r22, r26
     e78:	11 24       	eor	r1, r1
     e7a:	9f 57       	subi	r25, 0x7F	; 127
     e7c:	50 40       	sbci	r21, 0x00	; 0
     e7e:	9a f0       	brmi	.+38     	; 0xea6 <__mulsf3_pse+0x88>
     e80:	f1 f0       	breq	.+60     	; 0xebe <__mulsf3_pse+0xa0>
     e82:	88 23       	and	r24, r24
     e84:	4a f0       	brmi	.+18     	; 0xe98 <__mulsf3_pse+0x7a>
     e86:	ee 0f       	add	r30, r30
     e88:	ff 1f       	adc	r31, r31
     e8a:	bb 1f       	adc	r27, r27
     e8c:	66 1f       	adc	r22, r22
     e8e:	77 1f       	adc	r23, r23
     e90:	88 1f       	adc	r24, r24
     e92:	91 50       	subi	r25, 0x01	; 1
     e94:	50 40       	sbci	r21, 0x00	; 0
     e96:	a9 f7       	brne	.-22     	; 0xe82 <__mulsf3_pse+0x64>
     e98:	9e 3f       	cpi	r25, 0xFE	; 254
     e9a:	51 05       	cpc	r21, r1
     e9c:	80 f0       	brcs	.+32     	; 0xebe <__mulsf3_pse+0xa0>
     e9e:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__fp_inf>
     ea2:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__fp_szero>
     ea6:	5f 3f       	cpi	r21, 0xFF	; 255
     ea8:	e4 f3       	brlt	.-8      	; 0xea2 <__mulsf3_pse+0x84>
     eaa:	98 3e       	cpi	r25, 0xE8	; 232
     eac:	d4 f3       	brlt	.-12     	; 0xea2 <__mulsf3_pse+0x84>
     eae:	86 95       	lsr	r24
     eb0:	77 95       	ror	r23
     eb2:	67 95       	ror	r22
     eb4:	b7 95       	ror	r27
     eb6:	f7 95       	ror	r31
     eb8:	e7 95       	ror	r30
     eba:	9f 5f       	subi	r25, 0xFF	; 255
     ebc:	c1 f7       	brne	.-16     	; 0xeae <__mulsf3_pse+0x90>
     ebe:	fe 2b       	or	r31, r30
     ec0:	88 0f       	add	r24, r24
     ec2:	91 1d       	adc	r25, r1
     ec4:	96 95       	lsr	r25
     ec6:	87 95       	ror	r24
     ec8:	97 f9       	bld	r25, 7
     eca:	08 95       	ret

00000ecc <__divmodhi4>:
     ecc:	97 fb       	bst	r25, 7
     ece:	07 2e       	mov	r0, r23
     ed0:	16 f4       	brtc	.+4      	; 0xed6 <__divmodhi4+0xa>
     ed2:	00 94       	com	r0
     ed4:	07 d0       	rcall	.+14     	; 0xee4 <__divmodhi4_neg1>
     ed6:	77 fd       	sbrc	r23, 7
     ed8:	09 d0       	rcall	.+18     	; 0xeec <__divmodhi4_neg2>
     eda:	0e 94 7a 07 	call	0xef4	; 0xef4 <__udivmodhi4>
     ede:	07 fc       	sbrc	r0, 7
     ee0:	05 d0       	rcall	.+10     	; 0xeec <__divmodhi4_neg2>
     ee2:	3e f4       	brtc	.+14     	; 0xef2 <__divmodhi4_exit>

00000ee4 <__divmodhi4_neg1>:
     ee4:	90 95       	com	r25
     ee6:	81 95       	neg	r24
     ee8:	9f 4f       	sbci	r25, 0xFF	; 255
     eea:	08 95       	ret

00000eec <__divmodhi4_neg2>:
     eec:	70 95       	com	r23
     eee:	61 95       	neg	r22
     ef0:	7f 4f       	sbci	r23, 0xFF	; 255

00000ef2 <__divmodhi4_exit>:
     ef2:	08 95       	ret

00000ef4 <__udivmodhi4>:
     ef4:	aa 1b       	sub	r26, r26
     ef6:	bb 1b       	sub	r27, r27
     ef8:	51 e1       	ldi	r21, 0x11	; 17
     efa:	07 c0       	rjmp	.+14     	; 0xf0a <__udivmodhi4_ep>

00000efc <__udivmodhi4_loop>:
     efc:	aa 1f       	adc	r26, r26
     efe:	bb 1f       	adc	r27, r27
     f00:	a6 17       	cp	r26, r22
     f02:	b7 07       	cpc	r27, r23
     f04:	10 f0       	brcs	.+4      	; 0xf0a <__udivmodhi4_ep>
     f06:	a6 1b       	sub	r26, r22
     f08:	b7 0b       	sbc	r27, r23

00000f0a <__udivmodhi4_ep>:
     f0a:	88 1f       	adc	r24, r24
     f0c:	99 1f       	adc	r25, r25
     f0e:	5a 95       	dec	r21
     f10:	a9 f7       	brne	.-22     	; 0xefc <__udivmodhi4_loop>
     f12:	80 95       	com	r24
     f14:	90 95       	com	r25
     f16:	bc 01       	movw	r22, r24
     f18:	cd 01       	movw	r24, r26
     f1a:	08 95       	ret

00000f1c <sprintf>:
     f1c:	ae e0       	ldi	r26, 0x0E	; 14
     f1e:	b0 e0       	ldi	r27, 0x00	; 0
     f20:	e4 e9       	ldi	r30, 0x94	; 148
     f22:	f7 e0       	ldi	r31, 0x07	; 7
     f24:	0c 94 65 0a 	jmp	0x14ca	; 0x14ca <__prologue_saves__+0x1c>
     f28:	0d 89       	ldd	r16, Y+21	; 0x15
     f2a:	1e 89       	ldd	r17, Y+22	; 0x16
     f2c:	86 e0       	ldi	r24, 0x06	; 6
     f2e:	8c 83       	std	Y+4, r24	; 0x04
     f30:	1a 83       	std	Y+2, r17	; 0x02
     f32:	09 83       	std	Y+1, r16	; 0x01
     f34:	8f ef       	ldi	r24, 0xFF	; 255
     f36:	9f e7       	ldi	r25, 0x7F	; 127
     f38:	9e 83       	std	Y+6, r25	; 0x06
     f3a:	8d 83       	std	Y+5, r24	; 0x05
     f3c:	ae 01       	movw	r20, r28
     f3e:	47 5e       	subi	r20, 0xE7	; 231
     f40:	5f 4f       	sbci	r21, 0xFF	; 255
     f42:	6f 89       	ldd	r22, Y+23	; 0x17
     f44:	78 8d       	ldd	r23, Y+24	; 0x18
     f46:	ce 01       	movw	r24, r28
     f48:	01 96       	adiw	r24, 0x01	; 1
     f4a:	0e 94 b0 07 	call	0xf60	; 0xf60 <vfprintf>
     f4e:	ef 81       	ldd	r30, Y+7	; 0x07
     f50:	f8 85       	ldd	r31, Y+8	; 0x08
     f52:	e0 0f       	add	r30, r16
     f54:	f1 1f       	adc	r31, r17
     f56:	10 82       	st	Z, r1
     f58:	2e 96       	adiw	r28, 0x0e	; 14
     f5a:	e4 e0       	ldi	r30, 0x04	; 4
     f5c:	0c 94 81 0a 	jmp	0x1502	; 0x1502 <__epilogue_restores__+0x1c>

00000f60 <vfprintf>:
     f60:	ab e0       	ldi	r26, 0x0B	; 11
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	e6 eb       	ldi	r30, 0xB6	; 182
     f66:	f7 e0       	ldi	r31, 0x07	; 7
     f68:	0c 94 57 0a 	jmp	0x14ae	; 0x14ae <__prologue_saves__>
     f6c:	6c 01       	movw	r12, r24
     f6e:	7b 01       	movw	r14, r22
     f70:	8a 01       	movw	r16, r20
     f72:	fc 01       	movw	r30, r24
     f74:	17 82       	std	Z+7, r1	; 0x07
     f76:	16 82       	std	Z+6, r1	; 0x06
     f78:	83 81       	ldd	r24, Z+3	; 0x03
     f7a:	81 ff       	sbrs	r24, 1
     f7c:	cc c1       	rjmp	.+920    	; 0x1316 <vfprintf+0x3b6>
     f7e:	ce 01       	movw	r24, r28
     f80:	01 96       	adiw	r24, 0x01	; 1
     f82:	3c 01       	movw	r6, r24
     f84:	f6 01       	movw	r30, r12
     f86:	93 81       	ldd	r25, Z+3	; 0x03
     f88:	f7 01       	movw	r30, r14
     f8a:	93 fd       	sbrc	r25, 3
     f8c:	85 91       	lpm	r24, Z+
     f8e:	93 ff       	sbrs	r25, 3
     f90:	81 91       	ld	r24, Z+
     f92:	7f 01       	movw	r14, r30
     f94:	88 23       	and	r24, r24
     f96:	09 f4       	brne	.+2      	; 0xf9a <vfprintf+0x3a>
     f98:	ba c1       	rjmp	.+884    	; 0x130e <vfprintf+0x3ae>
     f9a:	85 32       	cpi	r24, 0x25	; 37
     f9c:	39 f4       	brne	.+14     	; 0xfac <vfprintf+0x4c>
     f9e:	93 fd       	sbrc	r25, 3
     fa0:	85 91       	lpm	r24, Z+
     fa2:	93 ff       	sbrs	r25, 3
     fa4:	81 91       	ld	r24, Z+
     fa6:	7f 01       	movw	r14, r30
     fa8:	85 32       	cpi	r24, 0x25	; 37
     faa:	29 f4       	brne	.+10     	; 0xfb6 <vfprintf+0x56>
     fac:	b6 01       	movw	r22, r12
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
     fb4:	e7 cf       	rjmp	.-50     	; 0xf84 <vfprintf+0x24>
     fb6:	91 2c       	mov	r9, r1
     fb8:	21 2c       	mov	r2, r1
     fba:	31 2c       	mov	r3, r1
     fbc:	ff e1       	ldi	r31, 0x1F	; 31
     fbe:	f3 15       	cp	r31, r3
     fc0:	d8 f0       	brcs	.+54     	; 0xff8 <vfprintf+0x98>
     fc2:	8b 32       	cpi	r24, 0x2B	; 43
     fc4:	79 f0       	breq	.+30     	; 0xfe4 <vfprintf+0x84>
     fc6:	38 f4       	brcc	.+14     	; 0xfd6 <vfprintf+0x76>
     fc8:	80 32       	cpi	r24, 0x20	; 32
     fca:	79 f0       	breq	.+30     	; 0xfea <vfprintf+0x8a>
     fcc:	83 32       	cpi	r24, 0x23	; 35
     fce:	a1 f4       	brne	.+40     	; 0xff8 <vfprintf+0x98>
     fd0:	23 2d       	mov	r18, r3
     fd2:	20 61       	ori	r18, 0x10	; 16
     fd4:	1d c0       	rjmp	.+58     	; 0x1010 <vfprintf+0xb0>
     fd6:	8d 32       	cpi	r24, 0x2D	; 45
     fd8:	61 f0       	breq	.+24     	; 0xff2 <vfprintf+0x92>
     fda:	80 33       	cpi	r24, 0x30	; 48
     fdc:	69 f4       	brne	.+26     	; 0xff8 <vfprintf+0x98>
     fde:	23 2d       	mov	r18, r3
     fe0:	21 60       	ori	r18, 0x01	; 1
     fe2:	16 c0       	rjmp	.+44     	; 0x1010 <vfprintf+0xb0>
     fe4:	83 2d       	mov	r24, r3
     fe6:	82 60       	ori	r24, 0x02	; 2
     fe8:	38 2e       	mov	r3, r24
     fea:	e3 2d       	mov	r30, r3
     fec:	e4 60       	ori	r30, 0x04	; 4
     fee:	3e 2e       	mov	r3, r30
     ff0:	2a c0       	rjmp	.+84     	; 0x1046 <vfprintf+0xe6>
     ff2:	f3 2d       	mov	r31, r3
     ff4:	f8 60       	ori	r31, 0x08	; 8
     ff6:	1d c0       	rjmp	.+58     	; 0x1032 <vfprintf+0xd2>
     ff8:	37 fc       	sbrc	r3, 7
     ffa:	2d c0       	rjmp	.+90     	; 0x1056 <vfprintf+0xf6>
     ffc:	20 ed       	ldi	r18, 0xD0	; 208
     ffe:	28 0f       	add	r18, r24
    1000:	2a 30       	cpi	r18, 0x0A	; 10
    1002:	40 f0       	brcs	.+16     	; 0x1014 <vfprintf+0xb4>
    1004:	8e 32       	cpi	r24, 0x2E	; 46
    1006:	b9 f4       	brne	.+46     	; 0x1036 <vfprintf+0xd6>
    1008:	36 fc       	sbrc	r3, 6
    100a:	81 c1       	rjmp	.+770    	; 0x130e <vfprintf+0x3ae>
    100c:	23 2d       	mov	r18, r3
    100e:	20 64       	ori	r18, 0x40	; 64
    1010:	32 2e       	mov	r3, r18
    1012:	19 c0       	rjmp	.+50     	; 0x1046 <vfprintf+0xe6>
    1014:	36 fe       	sbrs	r3, 6
    1016:	06 c0       	rjmp	.+12     	; 0x1024 <vfprintf+0xc4>
    1018:	8a e0       	ldi	r24, 0x0A	; 10
    101a:	98 9e       	mul	r9, r24
    101c:	20 0d       	add	r18, r0
    101e:	11 24       	eor	r1, r1
    1020:	92 2e       	mov	r9, r18
    1022:	11 c0       	rjmp	.+34     	; 0x1046 <vfprintf+0xe6>
    1024:	ea e0       	ldi	r30, 0x0A	; 10
    1026:	2e 9e       	mul	r2, r30
    1028:	20 0d       	add	r18, r0
    102a:	11 24       	eor	r1, r1
    102c:	22 2e       	mov	r2, r18
    102e:	f3 2d       	mov	r31, r3
    1030:	f0 62       	ori	r31, 0x20	; 32
    1032:	3f 2e       	mov	r3, r31
    1034:	08 c0       	rjmp	.+16     	; 0x1046 <vfprintf+0xe6>
    1036:	8c 36       	cpi	r24, 0x6C	; 108
    1038:	21 f4       	brne	.+8      	; 0x1042 <vfprintf+0xe2>
    103a:	83 2d       	mov	r24, r3
    103c:	80 68       	ori	r24, 0x80	; 128
    103e:	38 2e       	mov	r3, r24
    1040:	02 c0       	rjmp	.+4      	; 0x1046 <vfprintf+0xe6>
    1042:	88 36       	cpi	r24, 0x68	; 104
    1044:	41 f4       	brne	.+16     	; 0x1056 <vfprintf+0xf6>
    1046:	f7 01       	movw	r30, r14
    1048:	93 fd       	sbrc	r25, 3
    104a:	85 91       	lpm	r24, Z+
    104c:	93 ff       	sbrs	r25, 3
    104e:	81 91       	ld	r24, Z+
    1050:	7f 01       	movw	r14, r30
    1052:	81 11       	cpse	r24, r1
    1054:	b3 cf       	rjmp	.-154    	; 0xfbc <vfprintf+0x5c>
    1056:	98 2f       	mov	r25, r24
    1058:	9f 7d       	andi	r25, 0xDF	; 223
    105a:	95 54       	subi	r25, 0x45	; 69
    105c:	93 30       	cpi	r25, 0x03	; 3
    105e:	28 f4       	brcc	.+10     	; 0x106a <vfprintf+0x10a>
    1060:	0c 5f       	subi	r16, 0xFC	; 252
    1062:	1f 4f       	sbci	r17, 0xFF	; 255
    1064:	9f e3       	ldi	r25, 0x3F	; 63
    1066:	99 83       	std	Y+1, r25	; 0x01
    1068:	0d c0       	rjmp	.+26     	; 0x1084 <vfprintf+0x124>
    106a:	83 36       	cpi	r24, 0x63	; 99
    106c:	31 f0       	breq	.+12     	; 0x107a <vfprintf+0x11a>
    106e:	83 37       	cpi	r24, 0x73	; 115
    1070:	71 f0       	breq	.+28     	; 0x108e <vfprintf+0x12e>
    1072:	83 35       	cpi	r24, 0x53	; 83
    1074:	09 f0       	breq	.+2      	; 0x1078 <vfprintf+0x118>
    1076:	59 c0       	rjmp	.+178    	; 0x112a <vfprintf+0x1ca>
    1078:	21 c0       	rjmp	.+66     	; 0x10bc <vfprintf+0x15c>
    107a:	f8 01       	movw	r30, r16
    107c:	80 81       	ld	r24, Z
    107e:	89 83       	std	Y+1, r24	; 0x01
    1080:	0e 5f       	subi	r16, 0xFE	; 254
    1082:	1f 4f       	sbci	r17, 0xFF	; 255
    1084:	88 24       	eor	r8, r8
    1086:	83 94       	inc	r8
    1088:	91 2c       	mov	r9, r1
    108a:	53 01       	movw	r10, r6
    108c:	13 c0       	rjmp	.+38     	; 0x10b4 <vfprintf+0x154>
    108e:	28 01       	movw	r4, r16
    1090:	f2 e0       	ldi	r31, 0x02	; 2
    1092:	4f 0e       	add	r4, r31
    1094:	51 1c       	adc	r5, r1
    1096:	f8 01       	movw	r30, r16
    1098:	a0 80       	ld	r10, Z
    109a:	b1 80       	ldd	r11, Z+1	; 0x01
    109c:	36 fe       	sbrs	r3, 6
    109e:	03 c0       	rjmp	.+6      	; 0x10a6 <vfprintf+0x146>
    10a0:	69 2d       	mov	r22, r9
    10a2:	70 e0       	ldi	r23, 0x00	; 0
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <vfprintf+0x14a>
    10a6:	6f ef       	ldi	r22, 0xFF	; 255
    10a8:	7f ef       	ldi	r23, 0xFF	; 255
    10aa:	c5 01       	movw	r24, r10
    10ac:	0e 94 9c 09 	call	0x1338	; 0x1338 <strnlen>
    10b0:	4c 01       	movw	r8, r24
    10b2:	82 01       	movw	r16, r4
    10b4:	f3 2d       	mov	r31, r3
    10b6:	ff 77       	andi	r31, 0x7F	; 127
    10b8:	3f 2e       	mov	r3, r31
    10ba:	16 c0       	rjmp	.+44     	; 0x10e8 <vfprintf+0x188>
    10bc:	28 01       	movw	r4, r16
    10be:	22 e0       	ldi	r18, 0x02	; 2
    10c0:	42 0e       	add	r4, r18
    10c2:	51 1c       	adc	r5, r1
    10c4:	f8 01       	movw	r30, r16
    10c6:	a0 80       	ld	r10, Z
    10c8:	b1 80       	ldd	r11, Z+1	; 0x01
    10ca:	36 fe       	sbrs	r3, 6
    10cc:	03 c0       	rjmp	.+6      	; 0x10d4 <vfprintf+0x174>
    10ce:	69 2d       	mov	r22, r9
    10d0:	70 e0       	ldi	r23, 0x00	; 0
    10d2:	02 c0       	rjmp	.+4      	; 0x10d8 <vfprintf+0x178>
    10d4:	6f ef       	ldi	r22, 0xFF	; 255
    10d6:	7f ef       	ldi	r23, 0xFF	; 255
    10d8:	c5 01       	movw	r24, r10
    10da:	0e 94 91 09 	call	0x1322	; 0x1322 <strnlen_P>
    10de:	4c 01       	movw	r8, r24
    10e0:	f3 2d       	mov	r31, r3
    10e2:	f0 68       	ori	r31, 0x80	; 128
    10e4:	3f 2e       	mov	r3, r31
    10e6:	82 01       	movw	r16, r4
    10e8:	33 fc       	sbrc	r3, 3
    10ea:	1b c0       	rjmp	.+54     	; 0x1122 <vfprintf+0x1c2>
    10ec:	82 2d       	mov	r24, r2
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	88 16       	cp	r8, r24
    10f2:	99 06       	cpc	r9, r25
    10f4:	b0 f4       	brcc	.+44     	; 0x1122 <vfprintf+0x1c2>
    10f6:	b6 01       	movw	r22, r12
    10f8:	80 e2       	ldi	r24, 0x20	; 32
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    1100:	2a 94       	dec	r2
    1102:	f4 cf       	rjmp	.-24     	; 0x10ec <vfprintf+0x18c>
    1104:	f5 01       	movw	r30, r10
    1106:	37 fc       	sbrc	r3, 7
    1108:	85 91       	lpm	r24, Z+
    110a:	37 fe       	sbrs	r3, 7
    110c:	81 91       	ld	r24, Z+
    110e:	5f 01       	movw	r10, r30
    1110:	b6 01       	movw	r22, r12
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    1118:	21 10       	cpse	r2, r1
    111a:	2a 94       	dec	r2
    111c:	21 e0       	ldi	r18, 0x01	; 1
    111e:	82 1a       	sub	r8, r18
    1120:	91 08       	sbc	r9, r1
    1122:	81 14       	cp	r8, r1
    1124:	91 04       	cpc	r9, r1
    1126:	71 f7       	brne	.-36     	; 0x1104 <vfprintf+0x1a4>
    1128:	e8 c0       	rjmp	.+464    	; 0x12fa <vfprintf+0x39a>
    112a:	84 36       	cpi	r24, 0x64	; 100
    112c:	11 f0       	breq	.+4      	; 0x1132 <vfprintf+0x1d2>
    112e:	89 36       	cpi	r24, 0x69	; 105
    1130:	41 f5       	brne	.+80     	; 0x1182 <vfprintf+0x222>
    1132:	f8 01       	movw	r30, r16
    1134:	37 fe       	sbrs	r3, 7
    1136:	07 c0       	rjmp	.+14     	; 0x1146 <vfprintf+0x1e6>
    1138:	60 81       	ld	r22, Z
    113a:	71 81       	ldd	r23, Z+1	; 0x01
    113c:	82 81       	ldd	r24, Z+2	; 0x02
    113e:	93 81       	ldd	r25, Z+3	; 0x03
    1140:	0c 5f       	subi	r16, 0xFC	; 252
    1142:	1f 4f       	sbci	r17, 0xFF	; 255
    1144:	08 c0       	rjmp	.+16     	; 0x1156 <vfprintf+0x1f6>
    1146:	60 81       	ld	r22, Z
    1148:	71 81       	ldd	r23, Z+1	; 0x01
    114a:	07 2e       	mov	r0, r23
    114c:	00 0c       	add	r0, r0
    114e:	88 0b       	sbc	r24, r24
    1150:	99 0b       	sbc	r25, r25
    1152:	0e 5f       	subi	r16, 0xFE	; 254
    1154:	1f 4f       	sbci	r17, 0xFF	; 255
    1156:	f3 2d       	mov	r31, r3
    1158:	ff 76       	andi	r31, 0x6F	; 111
    115a:	3f 2e       	mov	r3, r31
    115c:	97 ff       	sbrs	r25, 7
    115e:	09 c0       	rjmp	.+18     	; 0x1172 <vfprintf+0x212>
    1160:	90 95       	com	r25
    1162:	80 95       	com	r24
    1164:	70 95       	com	r23
    1166:	61 95       	neg	r22
    1168:	7f 4f       	sbci	r23, 0xFF	; 255
    116a:	8f 4f       	sbci	r24, 0xFF	; 255
    116c:	9f 4f       	sbci	r25, 0xFF	; 255
    116e:	f0 68       	ori	r31, 0x80	; 128
    1170:	3f 2e       	mov	r3, r31
    1172:	2a e0       	ldi	r18, 0x0A	; 10
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	a3 01       	movw	r20, r6
    1178:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__ultoa_invert>
    117c:	88 2e       	mov	r8, r24
    117e:	86 18       	sub	r8, r6
    1180:	45 c0       	rjmp	.+138    	; 0x120c <vfprintf+0x2ac>
    1182:	85 37       	cpi	r24, 0x75	; 117
    1184:	31 f4       	brne	.+12     	; 0x1192 <vfprintf+0x232>
    1186:	23 2d       	mov	r18, r3
    1188:	2f 7e       	andi	r18, 0xEF	; 239
    118a:	b2 2e       	mov	r11, r18
    118c:	2a e0       	ldi	r18, 0x0A	; 10
    118e:	30 e0       	ldi	r19, 0x00	; 0
    1190:	25 c0       	rjmp	.+74     	; 0x11dc <vfprintf+0x27c>
    1192:	93 2d       	mov	r25, r3
    1194:	99 7f       	andi	r25, 0xF9	; 249
    1196:	b9 2e       	mov	r11, r25
    1198:	8f 36       	cpi	r24, 0x6F	; 111
    119a:	c1 f0       	breq	.+48     	; 0x11cc <vfprintf+0x26c>
    119c:	18 f4       	brcc	.+6      	; 0x11a4 <vfprintf+0x244>
    119e:	88 35       	cpi	r24, 0x58	; 88
    11a0:	79 f0       	breq	.+30     	; 0x11c0 <vfprintf+0x260>
    11a2:	b5 c0       	rjmp	.+362    	; 0x130e <vfprintf+0x3ae>
    11a4:	80 37       	cpi	r24, 0x70	; 112
    11a6:	19 f0       	breq	.+6      	; 0x11ae <vfprintf+0x24e>
    11a8:	88 37       	cpi	r24, 0x78	; 120
    11aa:	21 f0       	breq	.+8      	; 0x11b4 <vfprintf+0x254>
    11ac:	b0 c0       	rjmp	.+352    	; 0x130e <vfprintf+0x3ae>
    11ae:	e9 2f       	mov	r30, r25
    11b0:	e0 61       	ori	r30, 0x10	; 16
    11b2:	be 2e       	mov	r11, r30
    11b4:	b4 fe       	sbrs	r11, 4
    11b6:	0d c0       	rjmp	.+26     	; 0x11d2 <vfprintf+0x272>
    11b8:	fb 2d       	mov	r31, r11
    11ba:	f4 60       	ori	r31, 0x04	; 4
    11bc:	bf 2e       	mov	r11, r31
    11be:	09 c0       	rjmp	.+18     	; 0x11d2 <vfprintf+0x272>
    11c0:	34 fe       	sbrs	r3, 4
    11c2:	0a c0       	rjmp	.+20     	; 0x11d8 <vfprintf+0x278>
    11c4:	29 2f       	mov	r18, r25
    11c6:	26 60       	ori	r18, 0x06	; 6
    11c8:	b2 2e       	mov	r11, r18
    11ca:	06 c0       	rjmp	.+12     	; 0x11d8 <vfprintf+0x278>
    11cc:	28 e0       	ldi	r18, 0x08	; 8
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	05 c0       	rjmp	.+10     	; 0x11dc <vfprintf+0x27c>
    11d2:	20 e1       	ldi	r18, 0x10	; 16
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <vfprintf+0x27c>
    11d8:	20 e1       	ldi	r18, 0x10	; 16
    11da:	32 e0       	ldi	r19, 0x02	; 2
    11dc:	f8 01       	movw	r30, r16
    11de:	b7 fe       	sbrs	r11, 7
    11e0:	07 c0       	rjmp	.+14     	; 0x11f0 <vfprintf+0x290>
    11e2:	60 81       	ld	r22, Z
    11e4:	71 81       	ldd	r23, Z+1	; 0x01
    11e6:	82 81       	ldd	r24, Z+2	; 0x02
    11e8:	93 81       	ldd	r25, Z+3	; 0x03
    11ea:	0c 5f       	subi	r16, 0xFC	; 252
    11ec:	1f 4f       	sbci	r17, 0xFF	; 255
    11ee:	06 c0       	rjmp	.+12     	; 0x11fc <vfprintf+0x29c>
    11f0:	60 81       	ld	r22, Z
    11f2:	71 81       	ldd	r23, Z+1	; 0x01
    11f4:	80 e0       	ldi	r24, 0x00	; 0
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	0e 5f       	subi	r16, 0xFE	; 254
    11fa:	1f 4f       	sbci	r17, 0xFF	; 255
    11fc:	a3 01       	movw	r20, r6
    11fe:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__ultoa_invert>
    1202:	88 2e       	mov	r8, r24
    1204:	86 18       	sub	r8, r6
    1206:	fb 2d       	mov	r31, r11
    1208:	ff 77       	andi	r31, 0x7F	; 127
    120a:	3f 2e       	mov	r3, r31
    120c:	36 fe       	sbrs	r3, 6
    120e:	0d c0       	rjmp	.+26     	; 0x122a <vfprintf+0x2ca>
    1210:	23 2d       	mov	r18, r3
    1212:	2e 7f       	andi	r18, 0xFE	; 254
    1214:	a2 2e       	mov	r10, r18
    1216:	89 14       	cp	r8, r9
    1218:	58 f4       	brcc	.+22     	; 0x1230 <vfprintf+0x2d0>
    121a:	34 fe       	sbrs	r3, 4
    121c:	0b c0       	rjmp	.+22     	; 0x1234 <vfprintf+0x2d4>
    121e:	32 fc       	sbrc	r3, 2
    1220:	09 c0       	rjmp	.+18     	; 0x1234 <vfprintf+0x2d4>
    1222:	83 2d       	mov	r24, r3
    1224:	8e 7e       	andi	r24, 0xEE	; 238
    1226:	a8 2e       	mov	r10, r24
    1228:	05 c0       	rjmp	.+10     	; 0x1234 <vfprintf+0x2d4>
    122a:	b8 2c       	mov	r11, r8
    122c:	a3 2c       	mov	r10, r3
    122e:	03 c0       	rjmp	.+6      	; 0x1236 <vfprintf+0x2d6>
    1230:	b8 2c       	mov	r11, r8
    1232:	01 c0       	rjmp	.+2      	; 0x1236 <vfprintf+0x2d6>
    1234:	b9 2c       	mov	r11, r9
    1236:	a4 fe       	sbrs	r10, 4
    1238:	0f c0       	rjmp	.+30     	; 0x1258 <vfprintf+0x2f8>
    123a:	fe 01       	movw	r30, r28
    123c:	e8 0d       	add	r30, r8
    123e:	f1 1d       	adc	r31, r1
    1240:	80 81       	ld	r24, Z
    1242:	80 33       	cpi	r24, 0x30	; 48
    1244:	21 f4       	brne	.+8      	; 0x124e <vfprintf+0x2ee>
    1246:	9a 2d       	mov	r25, r10
    1248:	99 7e       	andi	r25, 0xE9	; 233
    124a:	a9 2e       	mov	r10, r25
    124c:	09 c0       	rjmp	.+18     	; 0x1260 <vfprintf+0x300>
    124e:	a2 fe       	sbrs	r10, 2
    1250:	06 c0       	rjmp	.+12     	; 0x125e <vfprintf+0x2fe>
    1252:	b3 94       	inc	r11
    1254:	b3 94       	inc	r11
    1256:	04 c0       	rjmp	.+8      	; 0x1260 <vfprintf+0x300>
    1258:	8a 2d       	mov	r24, r10
    125a:	86 78       	andi	r24, 0x86	; 134
    125c:	09 f0       	breq	.+2      	; 0x1260 <vfprintf+0x300>
    125e:	b3 94       	inc	r11
    1260:	a3 fc       	sbrc	r10, 3
    1262:	11 c0       	rjmp	.+34     	; 0x1286 <vfprintf+0x326>
    1264:	a0 fe       	sbrs	r10, 0
    1266:	06 c0       	rjmp	.+12     	; 0x1274 <vfprintf+0x314>
    1268:	b2 14       	cp	r11, r2
    126a:	88 f4       	brcc	.+34     	; 0x128e <vfprintf+0x32e>
    126c:	28 0c       	add	r2, r8
    126e:	92 2c       	mov	r9, r2
    1270:	9b 18       	sub	r9, r11
    1272:	0e c0       	rjmp	.+28     	; 0x1290 <vfprintf+0x330>
    1274:	b2 14       	cp	r11, r2
    1276:	60 f4       	brcc	.+24     	; 0x1290 <vfprintf+0x330>
    1278:	b6 01       	movw	r22, r12
    127a:	80 e2       	ldi	r24, 0x20	; 32
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    1282:	b3 94       	inc	r11
    1284:	f7 cf       	rjmp	.-18     	; 0x1274 <vfprintf+0x314>
    1286:	b2 14       	cp	r11, r2
    1288:	18 f4       	brcc	.+6      	; 0x1290 <vfprintf+0x330>
    128a:	2b 18       	sub	r2, r11
    128c:	02 c0       	rjmp	.+4      	; 0x1292 <vfprintf+0x332>
    128e:	98 2c       	mov	r9, r8
    1290:	21 2c       	mov	r2, r1
    1292:	a4 fe       	sbrs	r10, 4
    1294:	10 c0       	rjmp	.+32     	; 0x12b6 <vfprintf+0x356>
    1296:	b6 01       	movw	r22, r12
    1298:	80 e3       	ldi	r24, 0x30	; 48
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12a0:	a2 fe       	sbrs	r10, 2
    12a2:	17 c0       	rjmp	.+46     	; 0x12d2 <vfprintf+0x372>
    12a4:	a1 fc       	sbrc	r10, 1
    12a6:	03 c0       	rjmp	.+6      	; 0x12ae <vfprintf+0x34e>
    12a8:	88 e7       	ldi	r24, 0x78	; 120
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	02 c0       	rjmp	.+4      	; 0x12b2 <vfprintf+0x352>
    12ae:	88 e5       	ldi	r24, 0x58	; 88
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	b6 01       	movw	r22, r12
    12b4:	0c c0       	rjmp	.+24     	; 0x12ce <vfprintf+0x36e>
    12b6:	8a 2d       	mov	r24, r10
    12b8:	86 78       	andi	r24, 0x86	; 134
    12ba:	59 f0       	breq	.+22     	; 0x12d2 <vfprintf+0x372>
    12bc:	a1 fe       	sbrs	r10, 1
    12be:	02 c0       	rjmp	.+4      	; 0x12c4 <vfprintf+0x364>
    12c0:	8b e2       	ldi	r24, 0x2B	; 43
    12c2:	01 c0       	rjmp	.+2      	; 0x12c6 <vfprintf+0x366>
    12c4:	80 e2       	ldi	r24, 0x20	; 32
    12c6:	a7 fc       	sbrc	r10, 7
    12c8:	8d e2       	ldi	r24, 0x2D	; 45
    12ca:	b6 01       	movw	r22, r12
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12d2:	89 14       	cp	r8, r9
    12d4:	38 f4       	brcc	.+14     	; 0x12e4 <vfprintf+0x384>
    12d6:	b6 01       	movw	r22, r12
    12d8:	80 e3       	ldi	r24, 0x30	; 48
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12e0:	9a 94       	dec	r9
    12e2:	f7 cf       	rjmp	.-18     	; 0x12d2 <vfprintf+0x372>
    12e4:	8a 94       	dec	r8
    12e6:	f3 01       	movw	r30, r6
    12e8:	e8 0d       	add	r30, r8
    12ea:	f1 1d       	adc	r31, r1
    12ec:	80 81       	ld	r24, Z
    12ee:	b6 01       	movw	r22, r12
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    12f6:	81 10       	cpse	r8, r1
    12f8:	f5 cf       	rjmp	.-22     	; 0x12e4 <vfprintf+0x384>
    12fa:	22 20       	and	r2, r2
    12fc:	09 f4       	brne	.+2      	; 0x1300 <vfprintf+0x3a0>
    12fe:	42 ce       	rjmp	.-892    	; 0xf84 <vfprintf+0x24>
    1300:	b6 01       	movw	r22, r12
    1302:	80 e2       	ldi	r24, 0x20	; 32
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	0e 94 a7 09 	call	0x134e	; 0x134e <fputc>
    130a:	2a 94       	dec	r2
    130c:	f6 cf       	rjmp	.-20     	; 0x12fa <vfprintf+0x39a>
    130e:	f6 01       	movw	r30, r12
    1310:	86 81       	ldd	r24, Z+6	; 0x06
    1312:	97 81       	ldd	r25, Z+7	; 0x07
    1314:	02 c0       	rjmp	.+4      	; 0x131a <vfprintf+0x3ba>
    1316:	8f ef       	ldi	r24, 0xFF	; 255
    1318:	9f ef       	ldi	r25, 0xFF	; 255
    131a:	2b 96       	adiw	r28, 0x0b	; 11
    131c:	e2 e1       	ldi	r30, 0x12	; 18
    131e:	0c 94 73 0a 	jmp	0x14e6	; 0x14e6 <__epilogue_restores__>

00001322 <strnlen_P>:
    1322:	fc 01       	movw	r30, r24
    1324:	05 90       	lpm	r0, Z+
    1326:	61 50       	subi	r22, 0x01	; 1
    1328:	70 40       	sbci	r23, 0x00	; 0
    132a:	01 10       	cpse	r0, r1
    132c:	d8 f7       	brcc	.-10     	; 0x1324 <strnlen_P+0x2>
    132e:	80 95       	com	r24
    1330:	90 95       	com	r25
    1332:	8e 0f       	add	r24, r30
    1334:	9f 1f       	adc	r25, r31
    1336:	08 95       	ret

00001338 <strnlen>:
    1338:	fc 01       	movw	r30, r24
    133a:	61 50       	subi	r22, 0x01	; 1
    133c:	70 40       	sbci	r23, 0x00	; 0
    133e:	01 90       	ld	r0, Z+
    1340:	01 10       	cpse	r0, r1
    1342:	d8 f7       	brcc	.-10     	; 0x133a <strnlen+0x2>
    1344:	80 95       	com	r24
    1346:	90 95       	com	r25
    1348:	8e 0f       	add	r24, r30
    134a:	9f 1f       	adc	r25, r31
    134c:	08 95       	ret

0000134e <fputc>:
    134e:	0f 93       	push	r16
    1350:	1f 93       	push	r17
    1352:	cf 93       	push	r28
    1354:	df 93       	push	r29
    1356:	fb 01       	movw	r30, r22
    1358:	23 81       	ldd	r18, Z+3	; 0x03
    135a:	21 fd       	sbrc	r18, 1
    135c:	03 c0       	rjmp	.+6      	; 0x1364 <fputc+0x16>
    135e:	8f ef       	ldi	r24, 0xFF	; 255
    1360:	9f ef       	ldi	r25, 0xFF	; 255
    1362:	2c c0       	rjmp	.+88     	; 0x13bc <fputc+0x6e>
    1364:	22 ff       	sbrs	r18, 2
    1366:	16 c0       	rjmp	.+44     	; 0x1394 <fputc+0x46>
    1368:	46 81       	ldd	r20, Z+6	; 0x06
    136a:	57 81       	ldd	r21, Z+7	; 0x07
    136c:	24 81       	ldd	r18, Z+4	; 0x04
    136e:	35 81       	ldd	r19, Z+5	; 0x05
    1370:	42 17       	cp	r20, r18
    1372:	53 07       	cpc	r21, r19
    1374:	44 f4       	brge	.+16     	; 0x1386 <fputc+0x38>
    1376:	a0 81       	ld	r26, Z
    1378:	b1 81       	ldd	r27, Z+1	; 0x01
    137a:	9d 01       	movw	r18, r26
    137c:	2f 5f       	subi	r18, 0xFF	; 255
    137e:	3f 4f       	sbci	r19, 0xFF	; 255
    1380:	31 83       	std	Z+1, r19	; 0x01
    1382:	20 83       	st	Z, r18
    1384:	8c 93       	st	X, r24
    1386:	26 81       	ldd	r18, Z+6	; 0x06
    1388:	37 81       	ldd	r19, Z+7	; 0x07
    138a:	2f 5f       	subi	r18, 0xFF	; 255
    138c:	3f 4f       	sbci	r19, 0xFF	; 255
    138e:	37 83       	std	Z+7, r19	; 0x07
    1390:	26 83       	std	Z+6, r18	; 0x06
    1392:	14 c0       	rjmp	.+40     	; 0x13bc <fputc+0x6e>
    1394:	8b 01       	movw	r16, r22
    1396:	ec 01       	movw	r28, r24
    1398:	fb 01       	movw	r30, r22
    139a:	00 84       	ldd	r0, Z+8	; 0x08
    139c:	f1 85       	ldd	r31, Z+9	; 0x09
    139e:	e0 2d       	mov	r30, r0
    13a0:	09 95       	icall
    13a2:	89 2b       	or	r24, r25
    13a4:	e1 f6       	brne	.-72     	; 0x135e <fputc+0x10>
    13a6:	d8 01       	movw	r26, r16
    13a8:	16 96       	adiw	r26, 0x06	; 6
    13aa:	8d 91       	ld	r24, X+
    13ac:	9c 91       	ld	r25, X
    13ae:	17 97       	sbiw	r26, 0x07	; 7
    13b0:	01 96       	adiw	r24, 0x01	; 1
    13b2:	17 96       	adiw	r26, 0x07	; 7
    13b4:	9c 93       	st	X, r25
    13b6:	8e 93       	st	-X, r24
    13b8:	16 97       	sbiw	r26, 0x06	; 6
    13ba:	ce 01       	movw	r24, r28
    13bc:	df 91       	pop	r29
    13be:	cf 91       	pop	r28
    13c0:	1f 91       	pop	r17
    13c2:	0f 91       	pop	r16
    13c4:	08 95       	ret

000013c6 <__ultoa_invert>:
    13c6:	fa 01       	movw	r30, r20
    13c8:	aa 27       	eor	r26, r26
    13ca:	28 30       	cpi	r18, 0x08	; 8
    13cc:	51 f1       	breq	.+84     	; 0x1422 <__ultoa_invert+0x5c>
    13ce:	20 31       	cpi	r18, 0x10	; 16
    13d0:	81 f1       	breq	.+96     	; 0x1432 <__ultoa_invert+0x6c>
    13d2:	e8 94       	clt
    13d4:	6f 93       	push	r22
    13d6:	6e 7f       	andi	r22, 0xFE	; 254
    13d8:	6e 5f       	subi	r22, 0xFE	; 254
    13da:	7f 4f       	sbci	r23, 0xFF	; 255
    13dc:	8f 4f       	sbci	r24, 0xFF	; 255
    13de:	9f 4f       	sbci	r25, 0xFF	; 255
    13e0:	af 4f       	sbci	r26, 0xFF	; 255
    13e2:	b1 e0       	ldi	r27, 0x01	; 1
    13e4:	3e d0       	rcall	.+124    	; 0x1462 <__ultoa_invert+0x9c>
    13e6:	b4 e0       	ldi	r27, 0x04	; 4
    13e8:	3c d0       	rcall	.+120    	; 0x1462 <__ultoa_invert+0x9c>
    13ea:	67 0f       	add	r22, r23
    13ec:	78 1f       	adc	r23, r24
    13ee:	89 1f       	adc	r24, r25
    13f0:	9a 1f       	adc	r25, r26
    13f2:	a1 1d       	adc	r26, r1
    13f4:	68 0f       	add	r22, r24
    13f6:	79 1f       	adc	r23, r25
    13f8:	8a 1f       	adc	r24, r26
    13fa:	91 1d       	adc	r25, r1
    13fc:	a1 1d       	adc	r26, r1
    13fe:	6a 0f       	add	r22, r26
    1400:	71 1d       	adc	r23, r1
    1402:	81 1d       	adc	r24, r1
    1404:	91 1d       	adc	r25, r1
    1406:	a1 1d       	adc	r26, r1
    1408:	20 d0       	rcall	.+64     	; 0x144a <__ultoa_invert+0x84>
    140a:	09 f4       	brne	.+2      	; 0x140e <__ultoa_invert+0x48>
    140c:	68 94       	set
    140e:	3f 91       	pop	r19
    1410:	2a e0       	ldi	r18, 0x0A	; 10
    1412:	26 9f       	mul	r18, r22
    1414:	11 24       	eor	r1, r1
    1416:	30 19       	sub	r19, r0
    1418:	30 5d       	subi	r19, 0xD0	; 208
    141a:	31 93       	st	Z+, r19
    141c:	de f6       	brtc	.-74     	; 0x13d4 <__ultoa_invert+0xe>
    141e:	cf 01       	movw	r24, r30
    1420:	08 95       	ret
    1422:	46 2f       	mov	r20, r22
    1424:	47 70       	andi	r20, 0x07	; 7
    1426:	40 5d       	subi	r20, 0xD0	; 208
    1428:	41 93       	st	Z+, r20
    142a:	b3 e0       	ldi	r27, 0x03	; 3
    142c:	0f d0       	rcall	.+30     	; 0x144c <__ultoa_invert+0x86>
    142e:	c9 f7       	brne	.-14     	; 0x1422 <__ultoa_invert+0x5c>
    1430:	f6 cf       	rjmp	.-20     	; 0x141e <__ultoa_invert+0x58>
    1432:	46 2f       	mov	r20, r22
    1434:	4f 70       	andi	r20, 0x0F	; 15
    1436:	40 5d       	subi	r20, 0xD0	; 208
    1438:	4a 33       	cpi	r20, 0x3A	; 58
    143a:	18 f0       	brcs	.+6      	; 0x1442 <__ultoa_invert+0x7c>
    143c:	49 5d       	subi	r20, 0xD9	; 217
    143e:	31 fd       	sbrc	r19, 1
    1440:	40 52       	subi	r20, 0x20	; 32
    1442:	41 93       	st	Z+, r20
    1444:	02 d0       	rcall	.+4      	; 0x144a <__ultoa_invert+0x84>
    1446:	a9 f7       	brne	.-22     	; 0x1432 <__ultoa_invert+0x6c>
    1448:	ea cf       	rjmp	.-44     	; 0x141e <__ultoa_invert+0x58>
    144a:	b4 e0       	ldi	r27, 0x04	; 4
    144c:	a6 95       	lsr	r26
    144e:	97 95       	ror	r25
    1450:	87 95       	ror	r24
    1452:	77 95       	ror	r23
    1454:	67 95       	ror	r22
    1456:	ba 95       	dec	r27
    1458:	c9 f7       	brne	.-14     	; 0x144c <__ultoa_invert+0x86>
    145a:	00 97       	sbiw	r24, 0x00	; 0
    145c:	61 05       	cpc	r22, r1
    145e:	71 05       	cpc	r23, r1
    1460:	08 95       	ret
    1462:	9b 01       	movw	r18, r22
    1464:	ac 01       	movw	r20, r24
    1466:	0a 2e       	mov	r0, r26
    1468:	06 94       	lsr	r0
    146a:	57 95       	ror	r21
    146c:	47 95       	ror	r20
    146e:	37 95       	ror	r19
    1470:	27 95       	ror	r18
    1472:	ba 95       	dec	r27
    1474:	c9 f7       	brne	.-14     	; 0x1468 <__ultoa_invert+0xa2>
    1476:	62 0f       	add	r22, r18
    1478:	73 1f       	adc	r23, r19
    147a:	84 1f       	adc	r24, r20
    147c:	95 1f       	adc	r25, r21
    147e:	a0 1d       	adc	r26, r0
    1480:	08 95       	ret

00001482 <eeprom_read_byte>:
    1482:	f9 99       	sbic	0x1f, 1	; 31
    1484:	fe cf       	rjmp	.-4      	; 0x1482 <eeprom_read_byte>
    1486:	92 bd       	out	0x22, r25	; 34
    1488:	81 bd       	out	0x21, r24	; 33
    148a:	f8 9a       	sbi	0x1f, 0	; 31
    148c:	99 27       	eor	r25, r25
    148e:	80 b5       	in	r24, 0x20	; 32
    1490:	08 95       	ret

00001492 <eeprom_write_byte>:
    1492:	26 2f       	mov	r18, r22

00001494 <eeprom_write_r18>:
    1494:	f9 99       	sbic	0x1f, 1	; 31
    1496:	fe cf       	rjmp	.-4      	; 0x1494 <eeprom_write_r18>
    1498:	1f ba       	out	0x1f, r1	; 31
    149a:	92 bd       	out	0x22, r25	; 34
    149c:	81 bd       	out	0x21, r24	; 33
    149e:	20 bd       	out	0x20, r18	; 32
    14a0:	0f b6       	in	r0, 0x3f	; 63
    14a2:	f8 94       	cli
    14a4:	fa 9a       	sbi	0x1f, 2	; 31
    14a6:	f9 9a       	sbi	0x1f, 1	; 31
    14a8:	0f be       	out	0x3f, r0	; 63
    14aa:	01 96       	adiw	r24, 0x01	; 1
    14ac:	08 95       	ret

000014ae <__prologue_saves__>:
    14ae:	2f 92       	push	r2
    14b0:	3f 92       	push	r3
    14b2:	4f 92       	push	r4
    14b4:	5f 92       	push	r5
    14b6:	6f 92       	push	r6
    14b8:	7f 92       	push	r7
    14ba:	8f 92       	push	r8
    14bc:	9f 92       	push	r9
    14be:	af 92       	push	r10
    14c0:	bf 92       	push	r11
    14c2:	cf 92       	push	r12
    14c4:	df 92       	push	r13
    14c6:	ef 92       	push	r14
    14c8:	ff 92       	push	r15
    14ca:	0f 93       	push	r16
    14cc:	1f 93       	push	r17
    14ce:	cf 93       	push	r28
    14d0:	df 93       	push	r29
    14d2:	cd b7       	in	r28, 0x3d	; 61
    14d4:	de b7       	in	r29, 0x3e	; 62
    14d6:	ca 1b       	sub	r28, r26
    14d8:	db 0b       	sbc	r29, r27
    14da:	0f b6       	in	r0, 0x3f	; 63
    14dc:	f8 94       	cli
    14de:	de bf       	out	0x3e, r29	; 62
    14e0:	0f be       	out	0x3f, r0	; 63
    14e2:	cd bf       	out	0x3d, r28	; 61
    14e4:	09 94       	ijmp

000014e6 <__epilogue_restores__>:
    14e6:	2a 88       	ldd	r2, Y+18	; 0x12
    14e8:	39 88       	ldd	r3, Y+17	; 0x11
    14ea:	48 88       	ldd	r4, Y+16	; 0x10
    14ec:	5f 84       	ldd	r5, Y+15	; 0x0f
    14ee:	6e 84       	ldd	r6, Y+14	; 0x0e
    14f0:	7d 84       	ldd	r7, Y+13	; 0x0d
    14f2:	8c 84       	ldd	r8, Y+12	; 0x0c
    14f4:	9b 84       	ldd	r9, Y+11	; 0x0b
    14f6:	aa 84       	ldd	r10, Y+10	; 0x0a
    14f8:	b9 84       	ldd	r11, Y+9	; 0x09
    14fa:	c8 84       	ldd	r12, Y+8	; 0x08
    14fc:	df 80       	ldd	r13, Y+7	; 0x07
    14fe:	ee 80       	ldd	r14, Y+6	; 0x06
    1500:	fd 80       	ldd	r15, Y+5	; 0x05
    1502:	0c 81       	ldd	r16, Y+4	; 0x04
    1504:	1b 81       	ldd	r17, Y+3	; 0x03
    1506:	aa 81       	ldd	r26, Y+2	; 0x02
    1508:	b9 81       	ldd	r27, Y+1	; 0x01
    150a:	ce 0f       	add	r28, r30
    150c:	d1 1d       	adc	r29, r1
    150e:	0f b6       	in	r0, 0x3f	; 63
    1510:	f8 94       	cli
    1512:	de bf       	out	0x3e, r29	; 62
    1514:	0f be       	out	0x3f, r0	; 63
    1516:	cd bf       	out	0x3d, r28	; 61
    1518:	ed 01       	movw	r28, r26
    151a:	08 95       	ret

0000151c <_exit>:
    151c:	f8 94       	cli

0000151e <__stop_program>:
    151e:	ff cf       	rjmp	.-2      	; 0x151e <__stop_program>
