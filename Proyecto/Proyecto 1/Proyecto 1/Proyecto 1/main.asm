;**************************************************************************
; Universidad del Valle de Guatemala
; IE2023: Programación de Microcontroladores
; Proyecto 1.asm
; Autor: Santiago Burgos
; Proyecto: Proyecto No. 1 - Reloj
; Hardware: ATMega328P
; Creado: 26/02/2024 6:57:26 p. m.
; Author : SANTIAGO


;**************************************************************************
; ENCABEZADO
;**************************************************************************
.INCLUDE "M328PDEF.inc"
.CSEG
.ORG 0x0000
	JMP MAIN								;RESET VECTOR

.ORG 0x0008
	JMP ISR_PCINT1							;VECTOR: PC_INT1

.ORG 0X0020
	JMP ISR_TIMER0							;ISR: TIMER0 

.DEF STATE_REG = R18
.DEF MODE = R19


;**************************************************************************
; STACK POINTER
;**************************************************************************
MAIN:

	LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

	D7SEG: .DB 0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x76,0x5E,0x77,0x6D

;**************************************************************************
; SETTINGS
;**************************************************************************

SETUP: 

	LDI		R16, 0b0000_0000	;
	STS		UCSR0B, R16			;DESABILITO TX Y RX

	CLR R30
	LDI R30, 0
	LDI ZH, HIGH(D7SEG << 1)
	LDI ZL, LOW(D7SEG << 1)
	ADD ZL, R21
	LPM R30, Z								; CALL FROM D7SEG

	LDI R16, (1 << PCINT12) | (1 << PCINT11) | (1 << PCINT10) | (1 << PCINT9) | (1 << PCINT8)
	STS PCMSK1, R16							;ISR PCINT FOR PB0 AND PB1

	LDI R16, (1 << PCIE1)
	STS PCICR, R16							;PIN CHANGE FOR PORTC
	

	LDI R16, $FF								
	OUT DDRD, R16							; ASSIGN PORTD AS AN OUTPUT

	LDI R16, $2F
	OUT DDRB, R16							; ASSIGN PORTB AS AN OUTPUT (TRANSISTORS AND BUZZER)

	SBI PORTC, PC0							; PULLUP INC
	CBI DDRC, PC0							; INDICA QUE ES ENTRADA SI Y SOLO SI VA CON CBI

	SBI PORTC, PC1							; PULLUP DEC
	CBI DDRC, PC1							

	SBI PORTC, PC2							; PULLUP MODE
	CBI DDRC, PC2							

	SBI PORTC, PC3							; PULLUP SETTINGS
	CBI DDRC, PC3							

	SBI PORTC, PC4							; PULLUP ACTIVATE
	CBI DDRC, PC4							

	CALL INIT_T0							; START THE TIMER
	SEI										; ENABLE GLOBAL INTERRUPTIONS

	LDI R17, 0								; PUERTOC
	LDI STATE_REG, 0						; STATE VALUE
	LDI R20, 0								; TIMER COUNTER
	LDI R22, 0								; LSITA DEL VALORES PARA EL DISPLAY
	LDI R23, 0								; CONTADOR PARA EL BLINCK DE 50 MS
	LDI R26, 0								; PARA PREGUNTAR SI LOS DOS PUNTOS ESTAN ENCENDIDOS O APAGADOS
	LDI R30, 0								; REGISTRO PIVOTE O MULTIPROPOSITO
	

;LIBRES: R25, R28


;DISPLAY REGISTERS
	LDI MODE, 0								; DISPLAY 1 / DISPLAY LIST / R19
	LDI R21, 0								; DISPLAY 2 / MINUTE CLOCK
	LDI R24, 0								; DISPLAY 3 / MINUTE CLOCK
	LDI R27, 0								; DISPLAY 4 / HOUR CLOCK
	LDI R29, 0								; DISPLAY 5 / HOUR CLOCK
	
	LDI R23, 0								; SECOND BY SECOND COUNTER
	

	LDI R30, 0
	MOV R0, R30								; REGISTRO PARA LA ALARMA DISPLAY 2
	LDI R30, 0
	MOV R1, R30								; REGISTRO PARA LA ALARMA DISPLAY 3
	LDI R30, 0 
	MOV R2, R30								; REGISTRO PARA LA ALARMA DISPLAY 4
	LDI R30, 0
	MOV R3, R30								; REGISTRO PARA LA ALARMA DISPLAY 5
	



;**************************************************************************
; INFINITE LOOP
;**************************************************************************
LOOP:

	SBRS STATE_REG, 0								; COMPARE VALUE OF STATE_REG IN BIT0
	JMP STATE_XXX0							
	JMP STATE_XXX1

;**************************************************************************
; STATES COMPARISON 
;**************************************************************************

STATE_XXX0:
	
	SBRS STATE_REG, 1
	JMP STATE_XX00
	JMP STATE_XX10

STATE_XX00: 

	SBRS STATE_REG, 2 
	JMP STATE_X000 
	JMP STATE_X100 

STATE_XXX1:
	
	SBRS STATE_REG, 1
	JMP STATE_XX01
	JMP STATE_XX11 

STATE_X000:
 
	SBRS STATE_REG, 3 
	JMP STATE_0000 
	JMP STATE_1000  

STATE_XX01: 

	SBRS STATE_REG, 2 
	JMP STATE_X001 
	JMP STATE_X101 

STATE_X001: 

	SBRS STATE_REG, 3
	JMP STATE_0001 
	JMP STATE_1001

STATE_XX10: 
	
	SBRS STATE_REG, 2 
	JMP STATE_X010 
	JMP STATE_X110

STATE_X010: 

	SBRS STATE_REG, 3
	JMP STATE_0010 
	JMP STATE_1010

STATE_XX11: 
	
	SBRS STATE_REG, 2 
	JMP STATE_X011 
	JMP STATE_X111 

STATE_X011: 

	SBRS STATE_REG, 3
	JMP STATE_0011 

STATE_X100: 

	SBRS STATE_REG, 3
	JMP STATE_0100 

STATE_X101: 

	SBRS STATE_REG, 3
	JMP STATE_0101 
	JMP LOOP

STATE_X110: 

	SBRS STATE_REG, 3 
	JMP STATE_0110
	JMP STATE_X101

STATE_X111: 
	
	SBRS STATE_REG, 3
	JMP STATE_0111 
	JMP LOOP

;**************************************************************************
; STATES
;************************************************************************** 
COMPARE_STATE_0:
	SBRS STATE_REG, 0				; COMPARE VALUE OF STATE_REG IN BIT0
	JMP STATE_XXX0							
	JMP STATE_XXX1
;**************************************************************************

STATE_0000:								; SHOWS HOUR AND LETTER H
	

	LDI MODE, 10		; SHOWS H
	CALL DISPLAY_1

	CLR MODE
	MOV MODE, R21
	CALL DISPLAY_2		; SHOWS DISPLAY 2
	
	CLR MODE
	MOV MODE, R24
	CALL DISPLAY_3		; SHOWS DISPLAY 3
		

	CLR MODE 
	MOV MODE, R27 
	CALL DISPLAY_4				; SHOWS DISPLAY 4


	CLR MODE
	MOV MODE, R29
	CALL DISPLAY_5				; SHOWS DISPLAY 5
	
	CPI R20, 50					; COMPARADOR DEL TIMER, 50MS
	BRNE COMPARE_STATE_0
	CLR R20
	SBI PIND, PD7

	SBIS PORTD, PD7			; BLINK OF DP AT 50MS
	LDI R26, 0b0000_0000
	SBIC PORTD, PD7			; PREGUNTA SI LOS DOS BOTONES ESTAN ENCENDIDO O APAGADOS
	LDI R26, 0b1000_0000
	INC R23

	CPI R23, 120				; COMPARE IF R23 BLINKED 2 TIMES = 1 SEC
	BRNE COMPARE_STATE_0
	CLR R23
	INC R21					; DISPLAY 2

	CPI R21, 10				; COMPARES IF R21(DISPLAY2) CHANGED 10 TIMES= 10 SEC
	BRNE COMPARE_STATE_0
	CLR R21
	INC R24					; DISPLAY 3

	CPI R24, 6				; COMPARES IF R24, (DISPLAY3) CHANGED 5 TIMES= 59==>00
	BRNE COMPARE_STATE_0
	CLR R24
	INC R27					; DISPLAY 4

	CPI R27, 10				; COMPARES IF R27(DISPLAY4) CHANGED 10 TIMES = HOURS
	BRNE COMPARE_STATE_0
	CLR R27
	INC R29					; DISPLAY 5

	CPI R29, 2
	BRNE COMPARE_STATE_0
	CLR R29
	LDI R29, 0
	;LDI R30, 0
	;CPSE R8, R30
	;JMP SET_AL_D2			;INTENTO PARA LA ALARMA 

	JMP LOOP

;**************************************************************************
COMPARE_STATE_1:
	SBRS STATE_REG, 0				; COMPARE VALUE OF STATE_REG IN BIT0
	JMP STATE_XXX0							

	JMP STATE_XXX1
;**************************************************************************
STATE_0001:								; SEETINGS FOR MINUTES AND LETTER S

	SBI PORTD, PD7		; DP DONT BLINK

	LDI MODE, 10
	CALL DISPLAY_1		; SHOWS H

	CLR MODE
	MOV MODE, R21
	CALL DISPLAY_2		; MUESTRA DISPLAY 2

	CLR MODE
	MOV MODE, R24
	CALL DISPLAY_3		; MUESTRA DISPLAY 3

	

	JMP LOOP

STATE_0010:								; SETTINGS FOR HOUR AND LETTER S

	SBI PIND, PD7		; DP DONT BLINK
	LDI MODE, 10
	CALL DISPLAY_1

	CLR MODE
	MOV MODE, R27
	CALL DISPLAY_4		; MUESTRA EL DISPLAY 4 

	CLR MODE
	MOV MODE, R29
	CALL DISPLAY_5		; MUESTRA EL DISPLAY 5

	JMP LOOP

STATE_0011:								; DATE AND LETTER d
	
	LDI MODE, 11
	CALL DISPLAY_1
	LDI MODE, 0

	CPI R20, 50							; COMPARADOR DEL TIMER, 50MS
	BRNE STATE_0011
	CLR R20
	SBI PIND, PD7

	SBIS PORTD, PD7
	LDI R26, 0b0000_0000
	SBIC PORTD, PD7
	LDI R26, 0b1000_0000				; BLINK DE DP
		
	LDI MODE, 0
	CALL DISPLAY_2
	CALL DISPLAY_3
	CALL DISPLAY_4
	CALL DISPLAY_5
	
	JMP LOOP

STATE_0100:								; SETTINGS FOR DAYS AND LETTER S, BLINK OF DP
	
	LDI MODE, 11
	CALL DISPLAY_1
	LDI MODE, 0
	CALL DISPLAY_2
	CALL DISPLAY_3
	;CALL DISPLAY_4
	;CALL DISPLAY_5
	
	JMP LOOP

STATE_0101:									; SETTINGS FOR MONTHS

	LDI MODE, 11
	CALL DISPLAY_1
	LDI MODE, 0

	CALL DISPLAY_4
	CALL DISPLAY_5
	
	JMP LOOP

;***************************************************
COMPARE_STATE_6:
	SBRS STATE_REG, 0								; COMPARE VALUE OF STATE_REG IN BIT0
	JMP STATE_XXX0							

	JMP STATE_XXX1
STATE_0110:								; ALARM MODE

	LDI MODE, 12
	CALL DISPLAY_1				; MUESTRA LA LETRA "A"

	CLR MODE
	MOV MODE, R0
	CALL DISPLAY_2				; MUESTRA LOS VALORES DEL DISPLAY 2 A LA ALARMA
		
	CLR MODE
	MOV MODE, R1
	CALL DISPLAY_3				; DISPLAY 3 DE LA ALRMA

	CLR MODE
	MOV MODE, R2
	CALL DISPLAY_4				; DISPLAY 4 DE LA ALARMA

	CLR MODE
	MOV MODE, R3
	CALL DISPLAY_5

	CPI R20, 50							; COMPARADOR DEL TIMER, 50MS
	BRNE STATE_0110
	CLR R20
	SBI PIND, PD7

	SBIS PORTD, PD7
	LDI R26, 0b0000_0000			; ENCENDER DP
	SBIC PORTD, PD7
	LDI R26, 0b1000_0000

	JMP LOOP
	

STATE_0111:								; SETTING MINUTES FOR ALARM 
	
	LDI MODE, 12
	CALL DISPLAY_1

	MOV MODE, R0 
	CALL DISPLAY_2

	MOV MODE, R1
	CALL DISPLAY_3

	JMP LOOP
		
STATE_1000:								; SETTINGS HOURS FOR ALARM
	
	LDI MODE, 12
	CALL DISPLAY_1
	
	CLR MODE
	MOV MODE, R2
	CALL DISPLAY_4

	MOV MODE, R3
	CALL DISPLAY_5

	SBI PIND, PD7						; INTENTO DE ALARMA

	JMP LOOP

STATE_1001:								;ACTIVAR

	
	JMP LOOP

STATE_1010:								; DESACTIVAR ALARMA / INTENTO DE LA ALARMA
	LDI R30, 0
	CPSE R15, r30
	JMP SET_AL_D2
	SBI PINB, PB5
	JMP LOOP   


;**************************************************************************
; COMPARE INTERRUPTION FOR STATES
;**************************************************************************

INT_STATE_XXX0:
	
	SBRS STATE_REG, 1
	JMP INT_STATE_XX00
	JMP INT_STATE_XX10

INT_STATE_XX00: 

	SBRS STATE_REG, 2 
	JMP INT_STATE_X000 
	JMP INT_STATE_X100 

INT_STATE_XXX1:
	
	SBRS STATE_REG, 1
	JMP INT_STATE_XX01
	JMP INT_STATE_XX11 

INT_STATE_X000:
 
	SBRS STATE_REG, 3 
	JMP INT_STATE_0000 
	JMP INT_STATE_1000  

INT_STATE_XX01: 

	SBRS STATE_REG, 2 
	JMP INT_STATE_X001 
	JMP INT_STATE_X101 

INT_STATE_X001: 

	SBRS STATE_REG, 3
	JMP INT_STATE_0001 
	JMP INT_STATE_1001

INT_STATE_XX10: 
	
	SBRS STATE_REG, 2 
	JMP INT_STATE_X010 
	JMP INT_STATE_X110

INT_STATE_X010: 

	SBRS STATE_REG, 3
	JMP INT_STATE_0010 
	JMP INT_STATE_1010

INT_STATE_XX11: 
	
	SBRS STATE_REG, 2 
	JMP INT_STATE_X011 
	JMP INT_STATE_X111 

INT_STATE_X011: 

	SBRS STATE_REG, 3
	JMP INT_STATE_0011 
	
	JMP ISR_POP

INT_STATE_X100: 

	SBRS STATE_REG, 3
	JMP INT_STATE_0100 
	JMP ISR_POP


INT_STATE_X101: 

	SBRS STATE_REG, 3
	JMP INT_STATE_0101 
	JMP ISR_POP

INT_STATE_X110: 

	SBRS STATE_REG, 3 
	JMP INT_STATE_0110
	JMP INT_STATE_X101


INT_STATE_X111: 
	
	SBRS STATE_REG, 3
	JMP INT_STATE_0111 
	JMP ISR_POP


;*****************************************************
;INT_STATES
;*****************************************************


INT_STATE_0000:								
	
	IN R17, PINC
	SBRS R17, PC3		; SETTINGS

	LDI STATE_REG, 1
	IN R17, PINC

	SBRS R17, PC2		; MODE
	LDI STATE_REG, 3

	JMP ISR_POP
	
;*************************************************

INCREASE_MINUTE:
	LDI R30, 9				; CARGA EL VALOR DE 9
	CPSE R30, R21			; COMPARA SI SON IGUALES
	JMP INCREMENTAR			; SI NO ES IGUAL
	CLR R21					; SI ES IGUAL LLEGA A 0

	LDI R30, 5				; CARGA EL VALOR DE 5
	CPSE R24, R30			; COMPARA SI SON IGUALES
	JMP INCREMENTAR_2		; SI NO ES IGUAL 
	CLR R24					; SI ES IGUAL LLEGA A 0

	JMP ISR_POP

INCREMENTAR:		; INCREMENTA VALOR EN  DISPLAY 2 
	INC R21
	JMP ISR_POP
INCREMENTAR_2:		; INCREMENTA VALOR EN  DISPLAY 3
	INC R24
	JMP ISR_POP
		
DECREASE_MINUTE:
	LDI R30, 0		; SE LE DA EL VALOR DE 0
	CPSE R30, R21	; COMPARA 
	JMP DECREASE				; SI NO ES IGUAL        
	LDI R21, 9					;SI ES IGUAL

	LDI R30, 0		; SE LE DA EL VALOR DE 0
	CPSE R24, R30	; COMPARA	
	JMP DECREASE_2		; SI ES IGUAL
	LDI R24, 5			; SI NO ES IGUAL

	JMP ISR_POP
DECREASE:				; DECREMENTA EL VALOR DEL REGISTRO DEL DISPLAY2
	DEC R21
	JMP ISR_POP
DECREASE_2:				; DECREMENTA EL VALOR DEL REGISTRO DEL DISPLAY3
	DEC R24
	JMP ISR_POP

INT_STATE_0001:			; ESTADO 1
							
	IN R17, PINC
	SBRS R17, PC3		; PC3 CONGIFURACION A HORAS
	LDI STATE_REG, 2

	IN R17, PINC
	SBRS R17, PC4		; ACTIVAR REGRESA A H
	LDI STATE_REG, 0

	IN R17, PINC			;INCREMENTA
	SBRS R17, PC0
	JMP INCREASE_MINUTE

	IN R17, PINC			; DECREMENTA
	SBRS R17, PC1
	JMP DECREASE_MINUTE
	JMP ISR_POP
	
;******************************************
INCREASE_HOUR:

	LDI R30, 2				; LA DECESA YA ES DOS
	CPSE R30, R29			; NO 
	JMP INCREMENTAR_HORA	; INCREMENTA
	
	LDI R30, 3
	CPSE R30, R27;DISPLAY 4
	JMP INCREMENTAR_HORA

	CLR R27
	CLR R29				; PASA AL VALOR 00
	JMP ISR_POP

INCREMENTAR_HORA:			; SI R27 (DISPLAY 4) LLEGA A 9 O REGRESE A 0
	LDI R30, 9
	CPSE R30, R27
	JMP INC_HOUR
	CLR R27

	LDI R30, 2			; SI R24 LLEGA AL VALOR DE 2 ME INCREMNTEA R27
	CPSE R24, R30
	JMP INC_HOUR_2

	JMP ISR_POP

INC_HOUR:
	INC R27
	JMP ISR_POP

INC_HOUR_2:
	INC R29
	JMP ISR_POP


DECREASE_HOUR:					; ME DECREMENTA LA HORA AL CONFIGURARLA
	LDI R30, 0
	CPSE R30, R27
	JMP DECREASE_
	LDI R27, 3

	LDI R30, 0
	CPSE R29, R30
	JMP DECREASE_HOUR_2_CLOCK
	LDI R29, 2

	JMP ISR_POP

DECREASE_:
	
	DEC R27
	JMP ISR_POP
	
DECREASE_HOUR_2_CLOCK:
	
	DEC R29
	JMP ISR_POP
	
INT_STATE_0010:						; CONFIGURACION DE HORA				
	
	IN R17, PINC
	SBRS R17, PC4		; ACTIVATE
	LDI STATE_REG, 0
	
	IN R17, PINC
	SBIS PINC, PC0
	JMP INCREASE_HOUR	;INCREASE THE HOUR IN CLOCK

	IN R17, PINC
	SBIS PINC, PC1
	JMP DECREASE_HOUR	; DECREASE THE HOUR IN CLOCK

	IN R17, PINC
	SBIS PINC, PC3
	LDI STATE_REG, 0	; RETURNS TO STATE_0001

	JMP ISR_POP

INT_STATE_0011:								; DATE AND LETTER d

	IN R17, PINC
	SBIS PINC, PC3		;SETTINGS
	LDI STATE_REG, 4

	SBIS PINC, PC2		; MODE
	LDI STATE_REG, 6
	JMP ISR_POP


;****************************
INCREASE_DAYS:

	LDI R30, 9
	MOV R9, R21
	CPSE R9, R30
	JMP INCREASE_DAYS_D2

	LDI R30, 3
	MOV R10, R24
	CPSE R24, R30
	JMP INCREASE_DAYS_D3
	CLR R10
	CLR R9

	JMP ISR_POP

INCREASE_DAYS_D2:
	INC R9
	JMP ISR_POP
INCREASE_DAYS_D3:
	INC R10
	JMP ISR_POP

INT_STATE_0100:				; CONFIGURA EL VALOR DE LOS MESES					
	
	IN R17, PINC
	SBIS PINC, PC3		; SETTINGS
	LDI STATE_REG, 5

	IN R17, PINC		; INCREMENTEA
	SBIS PINC, PC0
	JMP INCREASE_DAYS

	SBIS PINC, PC4		; ACTIVATE
	LDI STATE_REG, 3
	JMP ISR_POP

INT_STATE_0101:					; CONFIGURA EL VALOR DE LOS DIAS					

	SBIS PINC, PC4		; ACTIVATE					; IF PRESS ACTIVE GOES TO 0011
	LDI STATE_REG, 3
	
	SBIS PINC, PC3		; ETO EZ POR SI QUEIRO QUE REGRESE AL S3 PRESIONANDO SETTINGS
	LDI STATE_REG, 3

	JMP ISR_POP





INT_STATE_0110:								; ALARM MODE

	SBIS PINC, PC3		; SETTINGS
	LDI STATE_REG, 7

	SBIS PINC, PC2		; MODE / TAKES ME TO HOUR
	LDI STATE_REG, 0

	JMP ISR_POP


; INTERRUPCIONES PARA EL ESTADO 7

INCREASE_MINUTE_ALARM:
	LDI R30, 9				; CARGA EL VALOR DE 9
	CPSE R30, R0			; COMPARA SI SON IGUALES
	JMP INCREMENTAR_AL		; SI NO ES IGUAL
	CLR R0					; SI ES IGUAL

	LDI R30, 5
	CPSE R1, R30
	JMP INCREMENTAR_2_AL
	CLR R1

	JMP ISR_POP
INCREMENTAR_AL:
	INC R0
	JMP ISR_POP
INCREMENTAR_2_AL:
	INC R1
	JMP ISR_POP
		
DECREASE_MINUTE_AL:				; DECREMENTA EL VALOR DE LOS MINUTOS EN LA CONFIGURACION DE LA ALARMA
	LDI R30, 0
	CPSE R30, R0
	JMP DECREASE_AL				; SI NO ES IGUAL
								; SI ES IGUAL
	LDI R30, 9
	MOV R0, R30

	LDI R30, 0
	CPSE R1, R30
	JMP DECREASE_2_AL
	LDI R30, 5
	MOV R1, R30

	JMP ISR_POP
DECREASE_AL:
	DEC R0
	JMP ISR_POP
DECREASE_2_AL:
	DEC R1
	JMP ISR_POP




INT_STATE_0111:				; SETTING MINUTES FOR ALARM 
		
	SBIS PINC, PC3		; SETTINGS FOP MINUTES IN ALARM
	LDI STATE_REG, 8
	
	IN R17, PINC		; INCREASE MINUTES IN ALARM
	SBRS R17, PC0
	JMP INCREASE_MINUTE_ALARM

	IN R17, PINC		; DECREASE MINUTES IN ALARM
	SBRS R17, PC1
	JMP DECREASE_MINUTE_AL

	IN R17, PINC
	SBRS R17, PC4
	LDI STATE_REG, 0		; REGRESA AL ESTADO 0 AL PRESIONAR PC4

	JMP ISR_POP


; *************************************************************************
; INTERRUPCIONES PARA EL ESTADO 8 

INCREASE_HOUR_ALARM:
	LDI R30, 2				; CARGA EL VALOR DE 9
	CPSE R30, R3			; COMPARA SI SON IGUALES
	JMP INCREMENTAR_HORA_ALARMA		; SI NO ES IGUAL
									
	LDI R30, 3
	CPSE R30, R2
	JMP INCREMENTAR_HORA_ALARMA

	CLR R2
	CLR R3

	JMP ISR_POP

INCREMENTAR_HORA_ALARMA:
	
	LDI R30, 9
	CPSE R30, R2
	JMP INCREMENTAR_AL_HOUR
	CLR R2

	LDI R30, 2
	CPSE R3, R30
	JMP INCREMENTAR_2_AL_HOUR
	JMP ISR_POP


INCREMENTAR_AL_HOUR:
	INC R2
	JMP ISR_POP

INCREMENTAR_2_AL_HOUR:
	INC R3
	JMP ISR_POP
		
DECREASE_HOUR_AL:
	LDI R30, 0
	CPSE R30, R2
	JMP DECREASE_AL_HOUR				; SI NO ES IGUAL								
	LDI R30, 3							; SI ES IGUAL 
	MOV R2, R30

	LDI R30, 0
	CPSE R3, R30
	JMP DECREASE_2_AL_HOUR			; SI NO ES IGUAL 
	LDI R30, 2						; SI ES IGUAL 
	MOV R3, R30

	JMP ISR_POP
DECREASE_AL_HOUR:
	DEC R2
	JMP ISR_POP
DECREASE_2_AL_HOUR:
	DEC R3
	JMP ISR_POP
		

INT_STATE_1000:								; SETTINGS HOURS FOR ALARM
	
	SBIS PINC, PC4		; ACTIVATE
	LDI STATE_REG, 9						
	
	SBIS PINC, PC3
	LDI STATE_REG, 7

	IN R17, PINC
	SBRS R17, PC0
	JMP INCREASE_HOUR_ALARM

	IN R17, PINC
	SBRS R17, PC1
	JMP DECREASE_HOUR_AL

	MOV R5, R2
	MOV R6, R3

	JMP ISR_POP



;*****************************
;	 ESTADO 9


INT_STATE_1001:			; PEDNIENTE PARA ACTIVAR LA ALRMA
	IN R17, PINC
	SBIS PINC, PC4
	JMP SET_AL_D2
	LDI STATE_REG, 0
	LDI R30, 1
	MOV R15, R30
								;ACTIVAR
	
	JMP ISR_POP


COMPARE_BUZZER:
	RET			; REGRESA DONDE ESTABA

SET_AL_D2:
	CP R5, R21
	BRNE COMPARE_BUZZER
	CP R6, R24
	BRNE COMPARE_BUZZER
	CP R2, R27
	BRNE COMPARE_BUZZER
	CP R3, R29
	BRNE COMPARE_BUZZER
	
	LDI STATE_REG, 10 

	JMP LOOP

INT_STATE_1010:			; PENDIETNE PARA DESACTIVAR LA ALARMA 

	IN R17, PINC
	SBIS PINC, PC4
	SBRS R8, 1
	CBI PORTB, PB5
	
	JMP ISR_POP

;**************************************************************************
; SUBRUTINAS
;**************************************************************************


DISPLAY_1: 

	
	CBI PORTB, PB1						
	CBI PORTB, PB2
	CBI PORTB, PB3
	CBI PORTB, PB4

	CLR R22
	MOV R22, MODE
	LDI ZH, HIGH(D7SEG << 1)
	LDI ZL, LOW(D7SEG << 1)
	ADD ZL, R22
	LPM R22, Z

	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB3
	CBI PORTB, PB4

	ADD R22, R26
	OUT PORTD, R22


	SBRC R22, PD0
	SBI PORTD, PD0
	SBRS R22, PD0
	CBI PORTD, PD0 

	SBI PORTB, PB0
	
	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB3
	CBI PORTB, PB4

	RET

DISPLAY_2: 
	
	CBI PORTB, PB0						
	CBI PORTB, PB2
	CBI PORTB, PB3
	CBI PORTB, PB4
	
	MOV R22, MODE
	LDI ZH, HIGH(D7SEG << 1)
	LDI ZL, LOW(D7SEG << 1)
	ADD ZL, R22
	LPM R22, Z

	CBI PORTB, PB0
	CBI PORTB, PB2
	CBI PORTB, PB3
	CBI PORTB, PB4

	ADD R22, R26
	OUT PORTD, R22

	SBRC R22, PD0
	SBI PORTD, PD0
	SBRS R22, PD0
	CBI PORTD, PD0 

	SBI PORTB, PB1
	
	CBI PORTB, PB0
	CBI PORTB, PB2
	CBI PORTB, PB3
	CBI PORTB, PB4

	RET

DISPLAY_3: 

	CLR R22
	MOV R22, MODE
	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB3
	CBI PORTB, PB4

	LDI ZH, HIGH(D7SEG << 1)
	LDI ZL, LOW(D7SEG << 1)
	ADD ZL, R22
	LPM R22, Z

	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB3
	CBI PORTB, PB4

	ADD R22, R26
	OUT PORTD, R22

	SBRC R22, PD0
	SBI PORTD, PD0
	SBRS R22, PD0
	CBI PORTD, PD0

	SBI PORTB, PB2
	
	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB3
	CBI PORTB, PB4
	RET

DISPLAY_4: 

	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB4

	CLR R22
	MOV R22, MODE
	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB4

	LDI ZH, HIGH(D7SEG << 1)
	LDI ZL, LOW(D7SEG << 1)
	ADD ZL, R22
	LPM R22, Z

	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB4

	ADD R22, R26
	OUT PORTD, R22

	SBRC R22, PD0
	SBI PORTD, PD0
	SBRS R22, PD0
	CBI PORTD, PD0

	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB4
	
	SBI PORTB, PB3
	
	RET
DISPLAY_5: 
	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB3

	CLR R22
	MOV R22, MODE
	

	LDI ZH, HIGH(D7SEG << 1)
	LDI ZL, LOW(D7SEG << 1)
	ADD ZL, R22
	LPM R22, Z

	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB3

	ADD R22, R26
	OUT PORTD, R22

	SBRC R22, PD0
	SBI PORTD, PD0
	SBRS R22, PD0
	CBI PORTD, PD0

	SBI PORTB, PB4

	CBI PORTB, PB0
	CBI PORTB, PB1
	CBI PORTB, PB2
	CBI PORTB, PB3
	
	
	
	RET


	
;************************************************************************
; INTERRUPCIONES
;************************************************************************

INIT_T0:
	LDI R16, (1 << CS02) | (1 << CS00)
	OUT TCCR0B, R16									;SET PRESCALER, 1024

	LDI R16, 99										;OVERFLOW VALUE, EVERY 10ms
	OUT TCNT0, R16									;LOAD START VALUE OF TIMER

	LDI R16, (1 << TOIE0)
	STS TIMSK0, R16									;INTERRUPTION ENABLE
	RET

ISR_TIMER0:
	
	PUSH R16										;SAVE PILE
	IN R16, SREG
	PUSH R16

	LDI R16, 99										;VALOR DE DESBORDAMIENTO CALCULADO 99.75== 99
	OUT TCNT0, R16									;LOAD THE OVERFLOW VALUE
	SBI TIFR0, TOV0									;TURN OFF FLAG
	INC R20											;INCREASE COUNTER OF 10ms

	POP R16											; GET SREG
	OUT SREG, R16
	POP R16

	RETI

ISR_PCINT1:					;INTERRUPTION FOR PORTC, TO CHANGE STATES
	PUSH R17
	IN R17, SREG
	PUSH R17
	
											;STATE_REG , STATE VALUE
	SBRS STATE_REG, 0								; COMPARE THE VALUE OF STATE_REG
	JMP INT_STATE_XXX0							
	JMP INT_STATE_XXX1

ISR_POP:
	
	SBI PCIFR, PCIF1
	POP R17											; GET SREG
	OUT SREG, R17
	POP R17

	RETI

